<div id="modalCC" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">JOB CC</h4>
            </div>
            <div class="modal-body">
                <button class="btn btn-info" id="btnAddNewCC">
                    <i class="fa fa-plus" aria-hidden="true"></i>
                    Add new CC
                </button>
                <div class="panel panel-success mt-2" id="CCWrap">
                    <div class="panel-heading">Add or update CC</div>
                    <div class="panel-body">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="cc" id="rbtAddTask" value="new-task"
                                checked>
                            <label class="form-check-label" for="rbtAddTask">
                                New task <span class="text-primary"><i class="fa fa-plus" aria-hidden="true"></i></span>
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="cc" id="rbtRefix" value="refix-task">
                            <label class="form-check-label" for="rbtRefix">
                                Refix task <span class="text-warning"><i class="fa fa-refresh"
                                        aria-hidden="true"></i></span>
                            </label>
                        </div>

                        <div id="divRefix" class="mt-2">

                            <div class="col-md-4">
                                <input type="checkbox" id="ckbSpecialTask" name="ckbSpecialTask" value="ckbSpecialTask">
                                <label for="ckbSpecialTask"> Special task</label>
                            </div>
                            <div class="col-md-8">
                                <select name="" id="slAvailableTasks" class="form-control"></select>
                            </div>

                        </div>

                        <div class="form-group mt-2">
                            <label for="">CC remark:</label>
                            <input type="text" placeholder="CC remark" id="txtCCRemark" class="form-control">
                        </div>

                    </div>
                    <div class="panel-footer text-right">
                        <button class="btn btn-primary text-center" id="btnSubmitCC">
                            <i class="fa fa-floppy-o" aria-hidden="true"></i>
                            Submit changes
                        </button>
                        <button class="btn btn-default" id="btnCancelCC">
                            Cancel
                        </button>
                    </div>
                </div>

                <div>

                </div>




            </div>
            <div class="modal-footer">
                <table class="table table-striped table-hover js-table mt-2">
                    <thead>
                        <th>#</th>
                        <th>Level</th>
                        <th>Remark</th>
                        <th class="text-center">Status</th>
                        <th></th>
                    </thead>
                    <tbody id="tblCCList"></tbody>
                </table>
            </div>
        </div>

    </div>
</div>

<script>
    var ccId = '';

    $('#btnSubmitCC').click(function () {
        let fee = $('#rbtAddTask').is(':checked');
        let remark = $('#txtCCRemark').val();
        let root = $('#ckbSpecialTask').is(':checked') ? $('#slAvailableTasks option:selected').data('root') : null;
        let task = $('#ckbSpecialTask').is(':checked') ? $('#slAvailableTasks option:selected').val() : null;

        if (remark.trim().length === 0) {
            Swal.fire({
                icon: 'error',
                title: 'Opp.....! Validate CC entry',
                text: `The CC remark can not be empty.`
            })           
            return;
        }

        if (ccId.length == 0) {
            $.ajax({
                url: '/sale/cc',
                type: 'post',
                headers: {
                    authorization: "Bearer " + localStorage.getItem("accessToken"),
                },
                data: {
                    jobId,
                    fee,
                    root,
                    task,
                    remark
                },
                success: function (data) {
                    $.toast({
                        heading: 'Successfully',
                        text: data.msg,
                        showHideTransition: 'fade',
                        icon: 'success'
                    });
                    LoadCCList();
                    $('#CCWrap').slideUp(300);

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Opp.....!',
                        text: jqXHR.responseJSON.msg
                    })
                }
            })
        } else {
            $.ajax({
                url: '/sale/cc',
                type: 'put',
                headers: {
                    authorization: "Bearer " + localStorage.getItem("accessToken"),
                },
                data: {
                    ccId,
                    fee,
                    root,
                    task,
                    remark
                },
                success: function (data) {
                    $.toast({
                        heading: 'Successfully',
                        text: data.msg,
                        showHideTransition: 'fade',
                        icon: 'success'
                    });
                    LoadCCList();
                    $('#CCWrap').slideUp(300);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Opp.....!',
                        text: jqXHR.responseJSON.msg
                    })
                }
            })
        }
    })
    $('#tblCCList').on("click", "button[name='delete-cc']", function () {

        Swal.fire({
            icon: 'question',
            title: 'Do you want to delete this CC?',
            showDenyButton: true,
            showCancelButton: true,
            confirmButtonText: 'Yes',
            denyButtonText: `No`,
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/sale/cc',
                    type: 'delete',
                    headers: {
                        authorization: "Bearer " + localStorage.getItem("accessToken"),
                    },
                    data: {
                        jobId,
                        ccId: $(this).closest("tr").attr("id")
                    },
                    success: function (data) {
                        $.toast({
                            heading: 'Successfully',
                            text: data.msg,
                            showHideTransition: 'fade',
                            icon: 'success'
                        });
                        LoadCCList();
                    }
                    , error: function (jqXHR, textStatus, errorThrown) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Opp..',
                            text: jqXHR.responseJSON.msg
                        });
                    }
                })
            }
        })

    })

    function LoadCCList() {
        $.ajax({
            url: '/sale/cc/list-by-job',
            type: 'get',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            data: { jobId },
            success: function (data) {
                let idx = 1;
                $('#tblCCList').empty();
                data.ccs.forEach(c => {
                    let tr = '<tr id="' + c._id + '">';
                    tr += '<td>' + (idx++) + '</td>';
                    tr += '<td class="font-weight-bold text-primary text-left">';
                    if (c.root) {
                        tr += c.root.name;
                    }

                    if (c.tasks.length > 0) {
                        let levels = c.tasks.map(x => ` ${x.basic.level.name}`);
                        tr += ' - [<span class="text-danger">' + levels + '</span>]'
                    }
                    tr += '</td>';
                    tr += '<td class="text-left">' + c.remark + '</td>';
                    tr += '<td class="text-center">';
                    switch (c.status) {
                        case -1: tr += '<i class="text-info">Initial</i>'; break;
                        case 0: tr += '<i class="text-primary">Processing</i>'; break;
                        case 1: tr += '<i class="text-success">Finish</i>'; break;
                    }
                    tr += '</td>';


                    tr += '<td class="text-right">';
                    tr += '<button class="btn btn-xs btn-warning" name="edit-cc"><i class="fa fa-refresh" aria-hidden="true"></i></button>';
                    tr += '<button class="btn btn-xs btn-danger ml-2" name="delete-cc"><i class="fa fa-trash" aria-hidden="true"></i></button>';
                    tr += '</td>';


                    tr += '</tr>';
                    $('#tblCCList').append(tr);
                })
            }
        })
    }

    function LoadAvailableTasks() {
        $.ajax({
            url: '/sale/task/list-available-tasks',
            type: 'get',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            data: { jobId },
            success: function (data) {
                $('#slAvailableTasks').empty();
                data.tasks.forEach(t => {
                    $('#slAvailableTasks').append('<option value="' + t._id + '" data-root="' + t.basic.mapping._id + '">' + t.basic.mapping.name + ' - ' + t.basic.level.name + '</option>')
                })
            },
            error: function (jqXHR, textStatus, errorThrown) {
                Swal.fire({
                    icon: 'error',
                    title: 'Opp.....!',
                    text: jqXHR.responseJSON.msg
                })
            }
        })
    }

    $('#btnAddNewCC').click(function () {
        $('#CCWrap').slideDown(300);
        $('#rbtAddTask').prop('checked', true);
        $('#txtCCRemark').val('');
        $('#ckbSpecialTask').prop('checked', false);
        $('#divRefix').slideUp(300);
        ccId = '';
    })
    $('#btnCancelCC').click(function () {
        ccId = '';
        $('#CCWrap').slideUp(300);
    })
    $('#tblCCList').on("click", "button[name='edit-cc']", function () {
        ccId = $(this).closest("tr").attr("id");
        $.ajax({
            url: '/sale/cc/detail',
            type: 'get',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            data: { ccId },
            success: function (data) {
                $('#CCWrap').slideDown(300);
                $('#txtCCRemark').val(data.cc.remark);
                if (data.cc.fee) {
                    $('#rbtAddTask').prop('checked', true);
                    $('#divRefix').slideUp(300);

                } else {
                    $('#rbtRefix').prop('checked', true);
                    if (typeof data.cc.root !== 'undefined') {
                        $('#divRefix').slideDown(300);
                        $('#ckbSpecialTask').prop('checked', true);
                        if (data.cc.tasks.length > 0) {
                            $('#slAvailableTasks').val(data.cc.children[0].task._id);
                        }

                    } else {
                        $('#divRefix').slideUp(300);
                        $('#ckbSpecialTask').prop('checked', false);
                    }
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                Swal.fire({
                    icon: 'error',
                    title: 'Opp.....!',
                    text: jqXHR.responseJSON.msg
                })
            }
        })
    })

    $('input[type=radio][name=cc]').change(function () {
        if (this.value == 'new-task') {
            $('#divRefix').slideUp(300);
            $('#ckbSpecialTask').prop('checked', false);
        }
        else {
            $('#divRefix').slideDown(500);
        }
    });

    $('#modalCC').on('shown.bs.modal', function (e) {
        $('#CCWrap').slideUp(200);
        LoadAvailableTasks();
        LoadCCList();
    })

</script>