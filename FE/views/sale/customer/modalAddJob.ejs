<script src="/js/common.js"></script>
<script type='text/javascript'
  src="https://rawgit.com/RobinHerbots/jquery.inputmask/3.x/dist/jquery.inputmask.bundle.js"></script>

<script src="/js/bootstrap-select.min.js"></script>
<link href="/css/bootstrap-select.min.css" rel="stylesheet" />

<div class="modal" tabindex="-1" role="dialog" id="addJobModal">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-body">
        <div class="panel panel-primary text-white bg-dark">
          <div class="panel-heading text-info font-weight-bold"><i class="fa fa-plus" aria-hidden="true"></i> Add a new
            job</div>
          <div class="panel-body">
            <div class="row form-group">
              <div class="col-sm-4">Customer:</div>
              <div class="col-sm-8 font-weight-bold text-info" id="lblCustomerFullname"></div>
            </div>
            <div class="row form-group">
              <div class="col-sm-4">Phone:</div>
              <div class="col-sm-8" id="lblCustomerPhone"></div>
            </div>
            <div class="row form-group">
              <div class="col-sm-4">Email:</div>
              <div class="col-sm-8" id="lblCustomerEmail"></div>
            </div>

            <hr>
            <div class="form-group">
              <label for="">Job name:</label>
              <input type="text" name="" id="txtName" class="form-control" placeholder="Job name">
            </div>

            <div class="form-group">
              <label for="">Link source:</label>
              <input type="text" name="" id="txtLinkSource" class="form-control" placeholder="Images link">
            </div>


            <div class="row">
              <div class="col-sm-5">
                <div class=" form-group">
                  <label for="">Received Date<span class="text-danger font-weight-bold">(*)</span> :</label>
                  <input type="text" class="inputDate form-control" id="txtReceivedDate">
                </div>
              </div>

              <div class="col-md-2">
                <div class="form-group">
                  <label for="">Duration:</label>
                  <input type="number" name="" id="txtDuration" class="form-control" value="0">
                </div>
              </div>

              <div class="col-sm-5">
                <div class="form-group">
                  <label for="">Delivery Date<span class="text-danger font-weight-bold">(*)</span> :</label>
                  <input type="text" class="inputDate form-control" id="txtDeliveryDate">
                </div>
              </div>
            </div>

            <div class="row" id="rowCombo">
              <div class="col-sm-12 form-group">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" value="" id="ckbChooseCombo">
                  <label class="form-check-label" for="ckbChooseCombo">
                    Choose Combo
                  </label>
                </div>
              </div>
            </div>
            <div class="row" id="divCombo">
              <div class="col-sm-12">
                <select name="" id="slCombo" class="form-control"></select>
              </div>
            </div>

            <div class="form-group">
              <label for="">Template</label>
              <select id="slTemplates" class="selectpicker form-control" multiple
                title="Choose one of the following..."></select>
            </div>



            <div class="row">
              <div class="col-sm-12 form-group">
                <label for="">Intruction:</label>
                <textarea name="" id="txaIntruction" rows="2" class="form-control"></textarea>
              </div>
            </div>

            <div class="row">
              <div class="col-md-12 form-group">
                <div class="checkbox">
                  <label><input type="checkbox" id="ckbMaterial">Material</label>
                </div>
              </div>
            </div>

            <div class="row" id="rMaterial" hidden>
              <div class="col-md-5 form-group">
                <label for="">Material type:</label>
                <select name="" id="slMaterials" class="form-control"></select>
              </div>
              <div class="col-md-5 form-group">
                <label for="">Captureder</label>
                <select name="" id="slCaptureders" class="form-control selectpicker" data-live-search="true"></select>
              </div>
              <div class="col-md-2 form-group">
                <label for="">Quantity:</label>
                <input type="text" name="" id="txtQuantity" class="form-control">
              </div>
            </div>

            <div class="row">
              <div class="col-md-12 col-sm-12 col-xs12">
                <label for="" class="text-danger" id="lblError"></label>
              </div>
            </div>



            <div class="form-group text-right">
              <button type="button" class="btn btn-sm btn-primary" id="btnSubmitJob">Submit job</button>
              <button type="button" class="btn btn-sm btn-secondary" data-dismiss="modal">Close</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>



<script>

  $(document).ready(function () {
    LoadCaptureders();
  })

  function LoadTemplates() {
    $.ajax({
      url: '/sale/customer/list-templates',
      type: 'get',
      headers: {
        authorization: "Bearer " + localStorage.getItem("accessToken"),
      },
      data: { customerId },
      success: function (data) {
        $('#slTemplates').empty();
        data.templates.forEach(temp => {
          let name = temp.root ? temp.root.name : temp.parents.name;
          $('#slTemplates').append('<option value="' + name + '">' + name + '</option>')
        })
        $('#slTemplates').selectpicker();
        $('#slTemplates').selectpicker('refresh');
      }
    })
  }



  function LoadComboes() {
    $.ajax({
      url: '/sale/combo',
      type: 'get',
      headers: {
        authorization: "Bearer " + localStorage.getItem("accessToken"),
      },
      data: { customerId },
      success: function (data) {
        if (data.comboes.length > 0) {
          $('#rowCombo').slideDown(500);
          data.comboes.forEach(c => {
            let levels = (c.lines.map(x => (x.root ? x.root.name : x.parents.name)+': '+x.quantity)).toString();
            
            let opt = '<option value="' + c._id + '">' + c.name +' [ '+levels+ ' ]</option>';
            $('#slCombo').append(opt);
          })
        }

      }
    })
  }

  function LoadMaterials() {
    $.ajax({
      url: '/sale/material',
      type: 'get',
      headers: {
        authorization: "Bearer " + localStorage.getItem("accessToken"),
      },
      success: function (data) {
        $('#slMaterials').empty();
        data.materials.forEach(m => {
          $('#slMaterials').append('<option value = "' + m._id + '">' + m.name + '</option>');
        })
      }
    })
  }

  function LoadCaptureders() {
    $.ajax({
      url: '/sale/user',
      type: 'get',
      headers: {
        authorization: "Bearer " + localStorage.getItem("accessToken"),
      },
      success: function (data) {
        $('#slCaptureders').empty();
        data.captureders.forEach(u => {
          $('#slCaptureders').append('<option value="' + u._id + '">' + u.fullname + ' (' + u.username + ') </option>');
        })
        $('#slCaptureders').selectpicker();
        $('#slCaptureders').selectpicker('refresh');
      }
    })
  }


  $("#addJobModal").on('shown.bs.modal', function (e) {
    $('#rowCombo').slideUp(100);
    $('#txtReceivedDate').val(getCurrentTime())
    $('#lblError').hide();
    $('#ckbChooseCombo').prop('checked', false);
    $('#divCombo').hide();
    LoadMaterials();
    LoadComboes();
    LoadTemplates();
  })
  $('#addJobModal').on('hidden.bs.modal', function () {
    LoadCustomers();
  })


  $("#ckbChooseCombo").change(function () {
    if (this.checked) {
      $('#divCombo').slideDown(600);
    } else {
      $('#divCombo').slideUp(600);
    }
  });

  $("#ckbMaterial").change(function () {
    if (this.checked) {
      $('#rMaterial').slideDown(600);
    } else {
      $('#rMaterial').slideUp(600);
    }
  });

  $("#txtDuration").bind('keyup mouseup', function () {
    let duration = parseInt($('#txtDuration').val());
    let assigned_date = strToDate($('#txtReceivedDate').val());
    let deadline = assigned_date.addHours(duration);
    $('#txtDeliveryDate').val(convertISODateToTimeFormat(deadline));
  });

  $('#btnSubmitJob').click(function () {
    let customer = customerId;
    let name = $('#txtName').val();
    let input_link = $('#txtLinkSource').val();
    let received_date = strToDate($('#txtReceivedDate').val());
    let delivery_date = strToDate($('#txtDeliveryDate').val());
    let intruction = $('#txaIntruction').val();
    let cb = $("#ckbChooseCombo").is(':checked') ? $('#slCombo option:selected').val() : null;

    let material = $('#ckbMaterial').is(':checked') ? $('#slMaterials option:selected').val() : null;
    let captureder = $('#ckbMaterial').is(':checked') ? $('#slCaptureders option:selected').val() : null;
    let quantity = $('#txtQuantity').val();



    var templates = ($("#slTemplates").val() || []).join(', ');


    if (isNaN(delivery_date) || delivery_date === null || isNaN(received_date) || received_date == null) {
      $('#lblError').text('(*) Received date or delivery date is  invalid!');
      $('#lblError').show().delay(3000).fadeOut();
      return;
    }


    if (delivery_date < new Date($.now())) {
      $('#lblError').text('(*) delivery date can not smaller than current time!');
      $('#lblError').show().delay(3000).fadeOut();
      return;
    }

    if (delivery_date <= received_date) {
      $('#lblError').text('(*) delivery date must be greater than received date!');
      $('#lblError').show().delay(3000).fadeOut();
      return;
    }

    if ($("#ckbChooseCombo").is(':checked') && typeof cb === 'undefined') {
      $('#lblError').text('(*) Please set combo to continue!');
      $('#lblError').show().delay(3000).fadeOut();
      return;
    }

    if ($('#ckbMaterial').is(':checked') && typeof material === 'undefined') {
      $('#lblError').text('(*) Please set material to continue!');
      $('#lblError').show().delay(3000).fadeOut();
      return;
    }


    $.ajax({
      url: '/sale/job',
      type: 'post',
      headers: {
        authorization: "Bearer " + localStorage.getItem("accessToken"),
      },
      data: { customer, name, input_link, received_date, delivery_date, intruction, cb, material, captureder, quantity, templates },
      success: function (data) {
        Swal.fire({
          icon: 'success',
          title: 'Successfully!',
          text: data.msg
        })
        $('#addJobModal').modal('hide');
        customerId = "";
      },
      error: function (jqXHR, textStatus, errorThrown) {
        Swal.fire({
          icon: 'error',
          title: 'Oops...',
          text: request.responseJSON.msg
        })
      },
    })
  })



  $('.inputDate').inputmask("datetime", {
    mask: "1/2/y h:s",
    placeholder: "dd/mm/yyyy hh:mm",
    leapday: "-02-29",
    separator: "/",
    alias: "dd/mm/yyyy hh:mm"
  })
  $('#txtDuration').keyup(function (e) {
    if (/\D/g.test(this.value)) {
      // Filter non-digits from input value.
      this.value = this.value.replace(/\D/g, '');
    }
    let duration = parseInt($('#txtDuration').val());
    let assigned_date = strToDate($('#txtReceivedDate').val());
    let deadline = assigned_date.addHours(duration);
    $('#txtDeliveryDate').val(convertISODateToTimeFormat(deadline));
  });
</script>