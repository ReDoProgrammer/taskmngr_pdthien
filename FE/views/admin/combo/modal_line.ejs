<div class="modal" tabindex="-1" id="modalComboLine">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body">
                <div class="panel panel-primary">
                    <div class="panel-heading font-weight-bold">
                        <div class="row">
                            <div class="col-md-11 col-sm-11 col-xs-10">
                                Combo line
                            </div>
                            <div class="col-md-1 col-sm-1 col-xs-2 text-right">
                                <button class="btn btn-xs btn-default" id="btnClose">
                                    <i class="fa fa-times" aria-hidden="true"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-8 form-group">
                                <label for="">Root levels</label>
                                <select name="" id="slRootLevels" class="form-control"></select>
                            </div>
                            <div class="col-md-2 form-group" id="colRootQuantity">
                                <label for="">Quantity:</label>
                                <input type="text" name="quantity" value="0" id="txtRootQuantity" class="form-control">
                            </div>
                            <div class="col-md-2 form-group mt-2">
                                <div class="checkbox mt-2">
                                    <label class="mt-2"><input type="checkbox" value="" id="ckbDivide">Divide
                                        levels</label>
                                </div>
                            </div>
                        </div>
                        <div class="row" id="rowParents">
                            <div class="col-md-10 form-group">
                                <label for="">Parents levels:</label>
                                <select name="" id="slParentsLevels" class="form-control"></select>
                            </div>
                            <div class="col-md-2 form-group">
                                <label for="">Quantity:</label>
                                <input type="text" name="quantity" id="txtParentsQuantity" value="0"
                                    class="form-control">
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-md-12 text-right">
                                <button class="btn btn-primary" id="btnSubmitLine">
                                    <i class="fa fa-plus" aria-hidden="true"></i>
                                    Add level to combo
                                </button>
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-md-12">
                                <label id="lblLineMsg" class="text-danger font-weight-bold"></label>
                            </div>
                        </div>

                        <hr />
                        <div class="table-responsive mt-2">
                            <table class="table table-striped">
                                <thead class="thead-dark">
                                    <tr>
                                        <th scope="col">#</th>
                                        <th scope="col">Level</th>
                                        <th scope="col" class="text-right">Quantity</th>
                                        <th scope="col" class="text-right"></th>
                                    </tr>
                                </thead>
                                <tbody id="tblLines"></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var lineId = '';
    $(document).ready(function () {
        LoadRootLevels();
    })
    

    $('#btnSubmitLine').click(function () {
        let quantity = parseInt($('#ckbDivide').is(':checked') ? $('#txtParentsQuantity').val() : $('#txtRootQuantity').val());
        console.log(quantity)
        if (quantity == 0) {
            $('#lblLineMsg').text('(!) Quantity must be greater than 0');
            $('#lblLineMsg').fadeIn().delay(3000).fadeOut();
            return;
        }
        $.ajax({
            url: '/admin/combo-line',
            type: 'post',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            data: {
                combo: _id,
                level: $('#ckbDivide').is(':checked') ? $('#slParentsLevels option:selected').val() : $('#slRootLevels option:selected').val(),
                divided: $('#ckbDivide').is(':checked'),
                quantity

            },
            success: function (data) {
                Swal.fire({
                    icon: 'success',
                    title: 'Successfully!',
                    text: data.msg
                });
                ResetComponents();
                LoadLines();
            }
            , error: function (jqXHR, textStatus, errorThrown) {
                Swal.fire({
                    icon: 'error',
                    title: 'Opp...!',
                    text: jqXHR.responseJSON.msg
                });
            }
        })
    })


    $('#btnClose').click(function () {
        $('#modalComboLine').modal('hide');
    })

    function LoadLines() {
        $.ajax({
            url: '/admin/combo-line/list',
            type: 'get',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            data: {
                cb: _id
            },
            success: function (data) {
                $('#tblLines').empty();
                let idx = 1;
                data.lines.forEach(l => {
                    let tr = '<tr id="' + l._id + '">';
                    tr += '<td>' + (idx++) + '</td>';
                    tr += '<td class = "font-weight-bold text-primary">';
                    tr += l.root ? l.root.name : l.parents.name;
                    tr += '</td>';
                    tr += '<td class = "text-right">' + l.qty + '</td>';
                    tr += '<td class = "text-right">';
                    tr += '<button class = "btn btn-xs btn-danger ml-2" name="delete_line"><i class="fa fa-trash" aria-hidden="true"></i></button>';
                    tr += '</td>';
                    tr += '</tr>';
                    $('#tblLines').append(tr);
                })
            }
        })
    }

    $('#modalComboLine').on('shown.bs.modal', function (e) {
        LoadLines();
        ResetComponents();

    })

    $('input[name="quantity"]').focusout(function () {
        if ($(this).val().length == 0) {
            $(this).val('0');
        }
    })

    $('input[name="quantity"]').keyup(function (e) {
        if (/\D/g.test(this.value)) {
            this.value = this.value.replace(/\D/g, '');
        }
    });

    $('#ckbDivide').change(function () {
        if (this.checked) {
            $('#rowParents').slideDown(500);
            $('#colRootQuantity').slideUp(500);
        } else {
            $('#colRootQuantity').slideDown(500);
            $('#rowParents').slideUp(500);
        }
    });

    $(document).on('hidden.bs.modal', '#modalComboLine', function () {
        $('#txtName').val('');
        $('#txtPrice').val(0);
        $('#txaDescription').val('');
        _id = '';
        LoadCombo();
    });

    $("#slRootLevels").change(function () {
        LoadParentsByRoot();
    });


    function ResetComponents() {
        $('#ckbDivide').prop('checked', false);
        $('#rowParents').slideUp(500);
        $('#colRootQuantity').slideDown(500);
        $('input[name="quantity"]').val('0');
    }

    function LoadRootLevels() {
        $.ajax({
            url: '/admin/root-level',
            type: 'get',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            success: function (data) {               
                $('#slRootLevels').empty();
                data.roots.forEach(r => {
                    let parents = (r.parents.map(x => x.name)).toString();
                    $('#slRootLevels').append('<option value="' + r._id + '">' + r.name + ' [ ' + parents + ' ]</option>');
                })
                LoadParentsByRoot();
            }, error: function (jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseJSON.msg);
            }
        })
    }

    function LoadParentsByRoot() {
        $.ajax({
            url: '/admin/parents-level/list-by-root',
            type: 'get',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            data: { rootId: $('#slRootLevels option:selected').val() },
            success: function (data) {               
                $('#slParentsLevels').empty();
                data.parentsList.forEach(p => {
                    let levels = (p.job_levels.map(x => x.name)).toString();
                    $('#slParentsLevels').append('<option value="' + p._id + '">' + p.name + ' [' + levels + ' ]</option>');
                })
            }
        })
    }


    $("#txtQuantity").on("keypress keyup blur", function (event) {
        //this.value = this.value.replace(/[^0-9\.]/g,'');
        $(this).val(
            $(this)
                .val()
                .replace(/[^0-9]/g, "")
        );
        if (
            (event.which != 46 || $(this).val().indexOf(".") != -1) &&
            (event.which < 48 || event.which > 57)
        ) {
            event.preventDefault();
        }
    });

</script>

<style>
    input[name="quantity"] {
        text-align: right;
    }
</style>