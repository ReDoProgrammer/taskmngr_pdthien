<div class="modal" tabindex="-1" id="modalComboLine">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body">
                <div class="panel panel-primary">
                    <div class="panel-heading font-weight-bold">
                        <div class="row">
                            <div class="col-md-11 col-sm-11 col-xs-10">
                                Combo line
                            </div>
                            <div class="col-md-1 col-sm-1 col-xs-2 text-right">
                                <button class="btn btn-xs btn-default" id="btnClose">
                                    <i class="fa fa-times" aria-hidden="true"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="col-md-10">
                            <select name="" id="slMappingList" class="form-control"></select>
                        </div>

                        <div class="col-md-2 input-group">
                            <input type="text" class="form-control text-right" id="txtLineQty" value="0"
                                name="quantity" />
                            <div class="input-group-btn">
                                <button class="btn btn-info" id="btnAddLine">
                                    <i class="fa fa-plus" aria-hidden="true"></i>
                                </button>
                            </div>
                        </div>



                        <hr />
                        <div class="table-responsive mt-2">
                            <table class="table table-striped">
                                <thead class="thead-dark">
                                    <tr>
                                        <th scope="col">#</th>
                                        <th scope="col">Level</th>
                                        <th scope="col" class="text-right">Quantity</th>
                                        <th scope="col" class="text-right"></th>
                                    </tr>
                                </thead>
                                <tbody id="tblLines"></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var lineId = '';
    $(document).ready(function () {
        LoadMappingList();
    })
    $(document).on("focusout", "input[name='line-quantity']", function () {
        let quantity = parseInt($(this).val());
        if (isNaN(quantity) || quantity <= 0) {
            $.toast({
                heading: 'Validation',
                text: `Quantity is invalid!`,
                showHideTransition: 'fade',
                icon: 'error'
            });
            return;
        }

        $.ajax({
            url: '/admin/combo/change-qty',
            type: 'put',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            data: {
                combo: _id,
                lineId: $(this).closest("tr").attr("id"),
                quantity
            },
            success: function (data) {
                $.toast({
                    heading: 'Successfully!',
                    text: data.msg,
                    showHideTransition: 'fade',
                    icon: 'success'
                });
            },
            error: function (err) {
                $.toast({
                    heading: 'Error',
                    text: err.responseJSON.msg,
                    showHideTransition: 'fade',
                    icon: 'error'
                });
            }
        })
    });
    $(document).on("click", "button[name='delete_line']", function () {
        Swal.fire({
            title: 'Are you sure want to delete this combo line?',
            text: "You won't be able to revert this!",
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/admin/combo/pull-line',
                    type: 'put',
                    headers: {
                        authorization: "Bearer " + localStorage.getItem("accessToken"),
                    },
                    data: {
                        combo: _id,
                        lineId: $(this).closest("tr").attr("id")
                    },
                    success: function (data, textStatus, xhr) {
                        $.toast({
                            heading: 'Successfully!',
                            text: data.msg,
                            showHideTransition: 'fade',
                            icon: 'success'
                        });
                        LoadLines();
                    }, error: function (err) {
                        $.toast({
                            heading: 'Error',
                            text: err.responseJSON.msg,
                            showHideTransition: 'fade',
                            icon: 'error'
                        });

                    }
                })

            }
        })
    })


    $('#btnAddLine').click(function () {
        let quantity = parseInt($('#txtLineQty').val());

        if (isNaN(quantity) || quantity <= 0) {
            $.toast({
                heading: 'Validation',
                text: `Quantity is invalid!`,
                showHideTransition: 'fade',
                icon: 'error'
            });
            return;
        }
        $.ajax({
            url: '/admin/combo/push-line',
            type: 'put',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            data: {
                combo: _id,
                map: $('#slMappingList option:selected').val(),
                quantity
            },
            success: function (data) {
                $.toast({
                    heading: 'Successfully!',
                    text: data.msg,
                    showHideTransition: 'fade',
                    icon: 'success'
                });
                LoadLines();
            }
            , error: function (err) {
                $.toast({
                    heading: 'Error',
                    text: err.responseJSON.msg,
                    showHideTransition: 'fade',
                    icon: 'error'
                });
            }
        })
    })


    $('#btnClose').click(function () {
        $('#modalComboLine').modal('hide');
    })

    function LoadLines() {
        $.ajax({
            url: '/admin/combo/list-lines',
            type: 'get',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            data: {
                combo: _id
            },
            success: function (data) {
                $('#tblLines').empty();
                let idx = 1;
                data.lines.forEach(l => {
                    let tr = '<tr id="' + l.mapping._id + '">';
                    tr += '<td class="col-md-1">' + (idx++) + '</td>';
                    tr += '<td class = "font-weight-bold text-primary col-md-8">';
                    tr += l.mapping.name;
                    tr += '</td>';
                    tr += '<td class = "text-right col-md-2"> <input type="text" class="form-control text-right" value="' + l.quantity + '" name="line-quantity"/></td>';
                    tr += '<td class = "text-right col-md-1">';
                    tr += '<button class = "btn btn-xs btn-danger ml-2" name="delete_line"><i class="fa fa-trash" aria-hidden="true"></i></button>';
                    tr += '</td>';
                    tr += '</tr>';
                    $('#tblLines').append(tr);
                })
            }
        })
    }

    $('#modalComboLine').on('shown.bs.modal', function (e) {
        LoadLines();
    })





    $(document).on('hidden.bs.modal', '#modalComboLine', function () {
        $('#txtName').val('');
        $('#txtPrice').val(0);
        $('#txaDescription').val('');
        _id = '';
        LoadCombo();
    });


    function LoadMappingList() {
        $.ajax({
            url: '/admin/mapping/list',
            type: 'get',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            success: function (data) {
                $('#slMappingList').empty();
                data.maps.forEach(m => {
                    $('#slMappingList').append('<option value="' + m._id + '">' + m.name + ' [ ' + m.description + ' ]</option>');
                })
            }, error: function (err) {
                $.toast({
                    heading: 'Error',
                    text: err.responseJSON.msg,
                    showHideTransition: 'fade',
                    icon: 'error'
                });
            }
        })
    }


</script>