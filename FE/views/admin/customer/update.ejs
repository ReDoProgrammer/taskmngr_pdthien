<%-include('child/basic-information')%>
    <%-include('child/style')%>
        <%-include('child/contract')%>

            <div class="row mt-2">
                <div class="col-md-9 col-sm-12 col-xs-12 mt-1">
                    <label id="lblError" class="text-danger"></label>
                </div>
                <div class="col-md-3 col-sm-12 col-xs-12 mt-1 text-right">
                    <button class="btn btn-secondary" id="btnCancel">Cancel</button>
                    <button class="btn btn-primary" id="btnSubmit">
                        <i class="fa fa-floppy-o"></i>
                        Submit
                    </button>
                </div>
            </div>

            <script src="/js/common.js"></script>
            <script>
                var customerId = '';
                $(document).ready(function () {
                    customerId = getUrlParameter('id');
                    LoadCustomer(customerId);
                    LoadCustomerLevels(customerId);
                    $('#txtEmail').prop('readonly', true);
                })

                $('#btnCancel').click(function(){                   
                    $(location).attr("href", '/admin/customer');
                })

                $("#btnSubmit").click(function () {

                    let firstname = $("#txtFirstname").val().trim();
                    if (firstname.length == 0) {
                        $('#lblError').text("Firstname can not be blank");
                        $('#lblError').show().delay(5000).fadeOut();
                        return;
                    }
                    let lastname = $("#txtLastname").val().trim();
                    if (lastname.length == 0) {
                        $('#lblError').text("Lastname can not be blank");
                        $('#lblError').show().delay(5000).fadeOut();
                        return;
                    }

                    let email = $("#txtEmail").val().trim();
                    if (email.length == 0) {
                        $('#lblError').text("Email can not be blank");
                        $('#lblError').show().delay(5000).fadeOut();
                        return;
                    }

                    if (!isEmail(email)) {
                        $('#lblError').text("Email is not valid");
                        $('#lblError').show().delay(5000).fadeOut();
                        return;
                    }

                    let password = $("#txtPassword").val();
                    let confirmpassword = $("#txtConfirmPassword").val();
                    if (password.length == 0 || confirmpassword.length == 0) {
                        $('#lblError').text("Password can not be blank");
                        $('#lblError').show().delay(5000).fadeOut();
                        return;
                    }

                    if (password !== confirmpassword) {
                        $('#lblError').text("Password and confirm password not match!");
                        $('#lblError').show().delay(5000).fadeOut();
                        return;
                    }

                    let phone = $("#txtPhone").val().trim();

                    let address = $("#txtAddress").val().trim();

                    let output = $("#slOutput option:selected").val();
                    let size = $("#slSize option:selected").val();
                    let color = $("#slColorMode option:selected").val();
                    let is_align = $("#ckbAlign").is(":checked") ? true : false;

                    let align_note = $("#txtAlign").val().trim();
                    let cloud = $("#slCloud option:selected").val();
                    let nation = $("#slNationalStyle option:selected").val();
                    let remark = $("#txtRemark").val().trim();

                    let has_TV = $("#ckbTV").is(":checked") ? true : false;
                    let TV_note = $("#txtTV").val().trim();
                    let has_grass = $("#ckbGrass").is(":checked") ? true : false;
                    let grass_note = $("#txtGrass").val().trim();
                    let has_sky = $("#ckbSky").is(":checked") ? true : false;
                    let sky_note = $("#txtSky").val().trim();
                    let has_fire = $("#ckbFire").is(":checked") ? true : false;
                    let fire_note = $("#txtFire").val().trim();


                    //validate as if option selected
                    if (typeof nation === 'undefined') {
                        $('#lblError').text("No national style has been selected. Please set national style list first!");
                        $('#lblError').show().delay(5000).fadeOut();
                        return;
                    }

                    if (typeof output === 'undefined') {
                        $('#lblError').text("No output has been selected. Please set ouput list first!");
                        $('#lblError').show().delay(5000).fadeOut();
                        return;
                    }



                    if (typeof size === 'undefined') {
                        $('#lblError').text("No size has been selected. Please set size list first!");
                        $('#lblError').show().delay(5000).fadeOut();
                        return;
                    }

                    if (typeof color === 'undefined') {
                        $('#lblError').text("No color mod has been selected. Please set color mode list first!");
                        $('#lblError').show().delay(5000).fadeOut();
                        return;
                    }

                    if (typeof cloud === 'undefined') {
                        $('#lblError').text("No cloud has been selected. Please set cloud list first!");
                        $('#lblError').show().delay(5000).fadeOut();
                        return;
                    }


                    let levels = [];

                    $("table > tbody  > tr").each(function (index, tr) {
                        let level = tr["id"];
                        let price = parseFloat($(this).find("td").eq(2).text());
                        let item = { level, price };
                        levels.push(item);
                    });

                    if (levels.length == 0) {
                        $('#lblError').text("Job levels list can not be empty!");
                        $('#lblError').show().delay(5000).fadeOut();
                    }



                

                    $.ajax({
                        url: "/admin/customer",
                        type: "put",
                        headers: {
                            authorization: "Bearer " + localStorage.getItem("accessToken"),
                        },
                        data: {
                            customerId,
                            firstname,
                            lastname,                          
                            password,
                            phone,
                            address,
                            output,
                            size,
                            color,
                            is_align,
                            align_note,
                            cloud,
                            nation,
                            remark,
                            has_TV,
                            TV_note,
                            has_grass,
                            grass_note,
                            has_sky,
                            sky_note,
                            has_fire,
                            fire_note,
                            levels,
                        },
                        success: function (data, textStatus, xhr) {
                            alert(data.msg);
                            $(location).attr("href", data.url);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            $('#lblError').text(jqXHR.responseJSON.msg);
                            $('#lblError').show().delay(5000).fadeOut();

                        },
                    });
                });

                $(document).on("click", "button[name='deleteLevel']", function () {
                    id = $(this).closest("tr").attr("id");
                    if (confirm("Are you sure want to delete this customer level?")) {
                        $.ajax({
                            url: '/admin/customer-level',
                            type: 'delete',
                            headers: {
                                authorization: "Bearer " + localStorage.getItem("accessToken"),
                            },
                            data: {
                                id
                            },
                            success: function (data) {
                                alert(data.msg);
                                LoadCustomerLevels(customerId);
                            }, error: function (jqXHR, textStatus, errorThrown) {
                                alert(jqXHR.responseJSON.msg);
                            },
                        })
                    }

                })

                $('#btnAddNewLevel').click(function () {
                    let levelId = $('#slLevel option:selected').val();
                    let price = parseFloat($('#txtPrice').val());

                    if (price <= 0) {

                        alert('Price not allowed!');
                        return;
                    }

                    $.ajax({
                        url: '/admin/customer-level',
                        type: 'post',
                        headers: {
                            authorization: "Bearer " + localStorage.getItem("accessToken"),
                        },
                        data: {
                            customerId,
                            levelId,
                            price
                        },
                        success: function (data) {
                            alert(data.msg);
                            LoadCustomerLevels(customerId);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(jqXHR.responseJSON.msg);
                        }

                    })
                })

                function LoadCustomer(customerId) {
                    $.ajax({
                        url: "/admin/customer/detail",
                        type: "get",
                        headers: {
                            authorization: "Bearer " + localStorage.getItem("accessToken"),
                        },
                        data: {
                            customerId
                        },
                        success: function (data, textStatus, xhr) {
                            console.log(data);

                            $('#txtFirstname').val(data.customer.firstname);
                            $('#txtLastname').val(data.customer.lastname);

                            $('#txtPhone').val(data.customer.phone);
                            $('#txtEmail').val(data.customer.email);
                            $('#txtAddress').val(data.customer.address);


                            $('#slOutput').val(data.customer.output._id);
                            $('#slSize').val(data.customer.size._id);
                            $('#slColorMode').val(data.customer.color._id);







                            $('#slCloud').val(data.customer.cloud._id);

                            $('#slNationalStyle').val(data.customer.nation._id);
                            $('#txtRemark').val(data.customer.remark);




                            if (data.customer.is_align) {
                                $('#ckbAlign').prop('checked', true);
                                $('#txtAlign').val(data.customer.align_note);
                                $('#txtAlign').prop('readonly', false);

                            } else {
                                $('#ckbAlign').prop('checked', false);
                            }

                            if (data.customer.has_TV) {
                                $('#ckbTV').prop('checked', true);
                                $('#txtTV').val(data.customer.TV_note);
                                $('#txtTV').prop('readonly', false);

                            } else {
                                $('#ckbTV').prop('checked', false);
                            }

                            if (data.customer.has_grass) {
                                $('#ckbGrass').prop('checked', true);
                                $('#txtGrass').val(data.customer.grass_note);
                                $('#txtGrass').prop('readonly', false);

                            } else {
                                $('#ckbGrass').prop('checked', false);
                            }

                            if (data.customer.has_sky) {
                                $('#ckbSky').prop('checked', true);
                                $('#txtSky').val(data.customer.grass_note);
                                $('#txtSky').prop('readonly', false);

                            } else {
                                $('#ckbSky').prop('checked', false);
                            }


                            if (data.customer.has_fire) {
                                $('#ckbFire').prop('checked', true);
                                $('#txtFire').val(data.customer.fire_note);
                                $('#txtFire').prop('readonly', false);
                            } else {
                                $('#ckbFire').prop('checked', false);
                            }

                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(jqXHR.responseJSON.msg + ". " + jqXHR.responseJSON.error);
                        }
                    })
                }


                function LoadCustomerLevels(customerId) {
                    $.ajax({
                        url: "/admin/customer-level",
                        type: "get",
                        headers: {
                            authorization: "Bearer " + localStorage.getItem("accessToken"),
                        },
                        data: {
                            customerId
                        },
                        success: function (data, textStatus, xhr) {

                            $('#tblData').empty();
                            let idx = 1;
                            data.cl.forEach(i => {

                                let tr = '<tr id="' + i._id + '">';
                                tr += '<td>' + (idx++) + '</td>';
                                tr += '<td class="font-weight-bold text-danger">' + i.level.name + '</td>';
                                tr += '<td class="text-warning text-right">' + i.price + '</td>';
                                tr += '<td class="text-right"><button class="btn btn-xs btn-danger" name="deleteLevel"><i class="fa fa-trash-o"></i></button></td>';
                                tr += '</tr>';
                                $('#tblData').append(tr);
                            })

                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(jqXHR.responseJSON.msg);
                        },
                    });
                }

                // chỉ cho phép chỉnh sửa các text box tương ứng với các checkbox khi checkbox đc tick
                $("#ckbAlign").change(function () {
                    if (this.checked) {
                        $('#txtAlign').val('');
                        $('#txtAlign').prop('readonly', false);
                    } else {
                        $('#txtAlign').val('');
                        $('#txtAlign').prop('readonly', true);
                    }
                });

                $("#ckbTV").change(function () {
                    if (this.checked) {
                        $('#txtTV').val('');
                        $('#txtTV').prop('readonly', false);
                    } else {
                        $('#txtTV').val('');
                        $('#txtTV').prop('readonly', true);
                    }
                });

                $("#ckbGrass").change(function () {
                    if (this.checked) {
                        $('#txtGrass').val('');
                        $('#txtGrass').prop('readonly', false);
                    } else {
                        $('#txtGrass').val('');
                        $('#txtGrass').prop('readonly', true);
                    }
                });

                $("#ckbGrass").change(function () {
                    if (this.checked) {
                        $('#txtGrass').val('');
                        $('#txtGrass').prop('readonly', false);
                    } else {
                        $('#txtGrass').val('');
                        $('#txtGrass').prop('readonly', true);
                    }
                });

                $("#ckbFire").change(function () {
                    if (this.checked) {
                        $('#txtFire').val('');
                        $('#txtFire').prop('readonly', false);
                    } else {
                        $('#txtFire').val('');
                        $('#txtFire').prop('readonly', true);
                    }
                });

                var getUrlParameter = function getUrlParameter(sParam) {
                    var sPageURL = window.location.search.substring(1),
                        sURLVariables = sPageURL.split('&'),
                        sParameterName,
                        i;

                    for (i = 0; i < sURLVariables.length; i++) {
                        sParameterName = sURLVariables[i].split('=');

                        if (sParameterName[0] === sParam) {
                            return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
                        }
                    }
                    return false;
                };
            </script>