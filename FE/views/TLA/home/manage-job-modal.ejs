<script src="/js/bootstrap-select.min.js"></script>
<script src="/js/common.js"></script>
<link href="/css/bootstrap-select.min.css" rel="stylesheet" />
<script type='text/javascript'
  src="https://rawgit.com/RobinHerbots/jquery.inputmask/3.x/dist/jquery.inputmask.bundle.js"></script>

<div class="modal" tabindex="-1" id="assignJobModal">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-body text-dark">
        <div class="panel panel-info mb-3">
          <div class="panel-heading font-weight-bold">
            <i class="fa fa-tasks" aria-hidden="true"></i>
            <label  id="name_case" class="text-uppercase"></label> - <label  id="customer" class="text-danger"></label>
          </div>
          <div class="panel-body">            

            <div class="row">
              <div class="col-md-2 col-sm-3 col-xs-4">
                <label class="font-weight-bold">Style note:</label>
              </div>
              <div class="col-md-10 col-sm-9 col-xs-8">
                <label id="style_note" class="text-danger"></label>
              </div>
            </div>
           

            <div class="row">
              <div class="col-md-2 col-sm-3 col-xs-4">
                <label class="font-weight-bold">Intruction:</label>
              </div>
              <div class="col-md-10 col-sm-9 col-xs-8">
                <label id="job_intruction" class="text-warning"></label>
              </div>
            </div>

            <div class="row mt-2">
              <div class="col-md-12 col-sm-12 col-xs-12">
                <button class="btn btn-sm btn-success" id="btnAddTask"><i class="fa fa-plus"></i> Add Task</button>
              </div>
            </div>
          </div>
        </div>





        <div class="table-responsive  table-responsive-sm table-responsive-xs mt-2">
          <table class="table mt-1 table-striped bg-white text-dark nowrap text-nowrap">
            <thead class="thead-dark">
              <tr>

                <th scope="col">#</th>               
                <th scope="col">Level</th>
                <th scope="col">Assign date</th>
                <th scope="col">Deadline</th>
                <th scope="col">Remark</th>
                <th scope="col">Editor</th>
                <th scope="col">Q.A</th>
                <th scope="col">Link</th>
                <th scope="col">Status</th>
                <th></th>
              </tr>
            </thead>
            <tbody id="tblTasks"></tbody>
          </table>
        </div>

        <hr/>
     
            
            <%-include('child/add-or-update-task')%>



              <div class="form-row">
                <div class="col-sm-12">
                  <label class="font-weight-bold text-danger mt-3" id="msgError"></label>
                </div>
              </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">
          Close
        </button>
      </div>
    </div>
  </div>
</div>




<script type="text/javascript">
  let idx = 1;
  var taskId = '';
  var levelId = '';

  //sự kiện click button sửa task trên table

  $(document).on("click", "button[name='btnEditTask']", function () {
    taskId = $(this).closest("tr").attr("id");
    levelId = $(this).closest("tr").data('level');
    LoadEditor();
    LoadQA();

    $.ajax({
      url: '/tla/task/detail',
      type: 'get',
      headers: {
        authorization: "Bearer " + localStorage.getItem("accessToken"),
      },
      data: {
        taskId
      },
      success: function (data) {       
        $('#divAddOrUpdateTask').slideUp(200);
        $('#divAddOrUpdateTask').slideDown(1000);
        $('#slJobLevels').val(data.task.level);
        $('#slJobLevels').attr("disabled", true); 
        $('#txtAssignDate').val(convertISODateToTimeFormat(data.task.assigned_date));
        $('#txtDeadline').val(convertISODateToTimeFormat(data.task.deadline));
        $('#txtInputLink').val(data.task.input_link);



        //xu ly checkbox va dropdown lien quan toi editor va qa
        $('#ckbAssignEditor').prop('checked',data.task.editor_assigned);
        $('#ckbAssignQA').prop('checked',data.task.qa_assigned);

        if(data.task.editor_assigned){
          $('#colEditor').show();
          $('#slEditor').val(data.task.editor);
          if(data.task.status >0){
            $('#ckbAssignEditor').attr("disabled", true); 
            $('#slEditor').attr("disabled", true); 
          }else{
            $('#ckbAssignEditor').attr("disabled", false); 
            $('#slEditor').attr("disabled", false); 
          }
        }else{
          $('#colEditor').hide();
        }

        if(data.task.qa_assigned){
          $('#colQA').show();
          $('#slQA').val(data.task.qa);
          if(data.task.status >1){
            $('#ckbAssignQA').attr("disabled", true); 
            $('#slQA').attr("disabled", true); 
          }else{
            $('#ckbAssignQA').attr("disabled", false); 
            $('#slQA').attr("disabled", false); 
          }
        }else{
          $('#colQA').hide();
        }        
      }
    })
  })

  $(document).on("click", "button[name='btnAssignStaffAuto']", function () {

    if (confirm('Are you sure want to set editor automatically')) {
      $.ajax({
        url: '/tla/queue',
        type: 'post',
        headers: {
          authorization: "Bearer " + localStorage.getItem("accessToken"),
        },
        data: {
          taskId: $(this).closest("tr").attr('id')
        },
        success: function (data) {
          alert(data.msg);
          LoadTasks();
        },
        error: function (jqXHR, textStatus, errorThrown) {
          console.log({ jqXHR, textStatus, errorThrown });
          alert(jqXHR.responseJSON.msg);
        }
      })
    }

  })

  $('#btnAddTask').click(function () {
    $('#divAddOrUpdateTask').slideDown(1000);
    $('#divAssign').slideUp(200);
    $('#divEditTask').slideUp(200);
    $("button[name='btnAssignStaff']").show(100);
    $("button[name='btnDelTask']").show(100);


    taskId = '';
    $('#colEditor').hide();
    $('#colQA').hide();
    $('#ckbAssignEditor').prop('checked', false);
    $('#ckbAssignQA').prop('checked', false);
    $('#txtInputLink').val('');
    LoadEditor();
    LoadQA();
  })

  $('.btnCancel').on('click', function () {
    $('#divAddOrUpdateTask').slideUp(500);    
    $("button[name='btnAssignStaff']").show(100);
    $("button[name='btnDelTask']").show(100);
    taskId = '';
  })











  $("#assignJobModal").on('shown.bs.modal', function (e) {
    LoadTasks();
    LoadJobLevels();
    $('#divLevel').hide();
    $('#divEditTask').hide();
    $('#divAssign').hide();
    $('#divAddOrUpdateTask').hide();
    $('#txtAssignDate').val(getCurrentTime())
  });


  $(document).ready(function () {
    $('#divAssign').hide();
    $('#divEditTask').hide();
  })

  function ChangeJobStatus(jobId, status) {
    $.ajax({
      url: '/tla/job/change-status',
      type: 'put',
      headers: {
        authorization: "Bearer " + localStorage.getItem("accessToken"),
      },
      data: {
        jobId,
        status
      },
      success: function (data) {
        console.log(data.msg);
      },
      error: function (jqXHR, textStatus, errorThrown) {
        $('#msgError').text(jqXHR.responseJSON.msg);
      }
    })
  }


  $(document).on("click", "button[name='btnEditTask']", function () {
    $('#divAssign').hide(100);
    $('#divLevel').hide(100);
    $('#divEditTask').slideDown(1000);

  })

  $(document).on("click", "button[name='btnAssignStaff']", function () {
    taskId = $(this).closest("tr").attr("id");
    levelId = $(this).closest("tr").data('level');

    if ($(this).closest("tr").data('editor') === 'undefined') {
      $('#divEditor').show();
    } else {
      $('#divEditor').hide();
    }

    if ($(this).closest("tr").data('qa') === 'undefined') {
      $('#divQA').show();
    } else {
      $('#divQA').hide();
    }


    LoadEditor();
    LoadQA();

    $('#divAssign').slideDown(1000);
    $('#divLevel').slideUp(500);
    $('#divEditTask').slideUp(500);
    $("button[name='btnAssignStaff']").fadeOut(100);
    $("button[name='btnDelTask']").fadeOut(100);
  })

  $(document).on("click", "button[name='btnDelTask']", function () {

    let _id = $(this).closest("tr").attr("id");
    if (confirm("Are you sure to delete this level?")) {
      $.ajax({
        url: '/tla/task',
        type: 'delete',
        headers: {
          authorization: "Bearer " + localStorage.getItem("accessToken"),
        },
        data: {
          _id
        },
        success: function (data) {
          $('#msgError').text(data.msg);
          $('#msgError').show();
          $('#msgError').hide(2000);
          LoadTasks();
        },
        error: function (jqXHR, textStatus, errorThrown) {
          $('#msgError').text(jqXHR.responseJSON.msg);
        }
      })
    }
  })







  function LoadTasks() {
    $("#tblTasks").empty();
    $.ajax({
      url: '/tla/task/list',
      type: 'get',
      headers: {
        authorization: "Bearer " + localStorage.getItem("accessToken"),
      },
      data: {
        jobId
      },
      success: function (data) {       
        let idx = 1;
        $("#tblTasks").empty();       
        data.tasks.forEach(t => {
          let tr = '<tr id="' + t._id + '" data-level="' + t.level._id + '" data-editor="';
          tr += t.editor;
          tr += '" data-qa="';
          tr += t.qa;
          tr += '">';

          tr += "<td>" + idx++ + "</td>";         


          tr += "<td class='font-weight-bold text-info'>" + t.level.name + "</td>";
          tr += "<td>" + convertISODateToTimeFormat(t.assigned_date) + "</td>";
          tr += "<td>" + convertISODateToTimeFormat(t.deadline) + "</td>";
          tr += "<td>" + t.remark + "</td>";






          tr += '<td>';
          if (typeof t.editor !== 'undefined')
            tr += t.editor.fullname;
          else tr += '';
          tr += "</td>";

          tr += '<td>';

          if (typeof t.qa !== 'undefined')
            tr += t.qa.fullname;
          else tr += '';

          tr += '<td>';
          if (isValidHttpUrl(t.input_link)) {
            tr += '<a href="' + t.input_link + '" target="_blank">Link</a>'
          } else {
            tr += t.input_link
          }

          tr += '</td>';


          tr += '<td class="font-italic">';
          switch (t.status) {

            case 0: tr += '<span class="text-info">Processing</span>'; break;
            case 1: {
              if (t.edited_time > 1) {
                tr += '<span class="text-primary">Fixed</span>';
              } else {
                tr += '<span class="text-primary">Edited</span>';
              }
              break;
            }
            case 2: tr += '<span class="text-success">Q.A ok</span>'; break;
            case 3: tr += '<span class="text-success">DC ok</span>'; break;
            case -1: tr += '<span class="text-info">Initial</span>'; break;
            case -2: tr += '<span class="text-danger">Q.A reject</span>'; break;
            case -3: tr += '<span class="text-danger">DC reject</span>'; break;

          }
          tr += '</td>';



          tr += '<td class="text-right">';
                   
          if (t.status == -1) {
            tr += '<button class="ml-2 btn btn-xs btn-primary" name="btnAssignStaffAuto"><i class="fa fa-refresh" aria-hidden="true"></i> ASE</button>';
          }
         
          if (t.status < 1) {
            tr += '<button class="ml-1 btn btn-xs btn-danger" name="btnDelTask"><i class="fa fa-trash text-white" aria-hidden="true"></i></button>';
          }

          tr += '<button class="ml-1 btn btn-xs btn-warning" name="btnEditTask"><i class="fa fa-edit"></i></button>';
          tr += '</td>';

          tr += "</tr>";

          $("#tblTasks").append(tr);
        })
      },
      error: function (jqXHR, textStatus, errorThrown) {
        $('#msgError').text(jqXHR.responseJSON.msg);
        $('#msgError').show().delay(3000).fadeOut();
      },
    });
  }





  $('.inputDate').inputmask("datetime", {
    mask: "1/2/y h:s",
    placeholder: "dd/mm/yyyy hh:mm",
    leapday: "-02-29",
    separator: "/",
    alias: "dd/mm/yyyy hh:mm"
  })




</script>