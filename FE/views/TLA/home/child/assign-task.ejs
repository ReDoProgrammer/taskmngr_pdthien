<div class="panel panel-primary" id="divLevel">
    <div class="panel-heading font-w">
        <div class="row">
            <div class="col-md-11 col-sm-11 col-xs-11">
                Add task
            </div>
            <div class="col-md-1 col-sm-1 col-xs-1 text-right">
                <button class="btn btn-xs btn-danger btnCancel">
                    <i class="fa fa-close"></i>
                </button>
            </div>
        </div>
    </div>
    <div class="panel-body">

        <div class="row">
            <div class="col-md-6 col-sm-12 col-xs-12">
                <div class="form-group">
                    <label for="">Job level</label>
                    <select name="" id="slJobLevels" class="form-control"></select>
                </div>

            </div>
            <div class="col-md-3 col-sm-6 col-xs-6">
                <div class="form-group">
                    <label for="">Assign Date<span class="text-danger font-weight-bold">(*)</span>: </label>
                    <input type="text" class="inputDate form-control" id="txtAssignDate">
                </div>
            </div>

            <div class="col-md-3 col-sm-6 col-xs-6">
                <div class=" form-group">
                    <label for="">Deadline<span class="text-danger font-weight-bold">(*)</span>:</label>
                    <input type="text" class="inputDate form-control" id="txtDeadline">
                </div>
            </div>
        </div>

        <div class="row mt-2">
            <div class="form-group col-md-12 col-sm-12 col-xs-12">
                <label for="">Images Link:</label>
                <input type="text" class="form-control" id="txtInputLink">
            </div>
        </div>

        <div class="row mt-2">
            <div class="col-md-10 col-sm-8 col-xs-7">
                <input type="text" name="txtRemark" id="txtRemark" class="form-control" placeholder="Level remark">
            </div>
            <div class="col-md-2 col-sm-4 col-xs-5 text-center">
                <button class="btn btn-info" id="btnAddLevel">
                    <i class="fa fa-plus" aria-hidden="true"></i>Add task
                </button>
            </div>
        </div>


    </div>

</div>

<script>
    function LoadJobLevels() {

        $.ajax({
            url: '/tla/job-level',
            type: 'get',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            data: {
                customerId
            },

            success: function (data) {
                $('#slJobLevels').empty();
                $('#slJobLevelsInEditDiv').empty();
                data.jl.forEach(j => {
                    let opt = '<option value="' + j._id + '" class="font-weight-bold text-danger">' + j.name + '</option>';
                    $('#slJobLevels').append(opt);
                    $('#slJobLevelsInEditDiv').append(opt);
                })
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $('#msgError').text(jqXHR.responseJSON.msg);
            },
        })
    }


    $("#btnAddLevel").click(function () {
        let level = $("#slJobLevels option:selected").val();
        let name = $("#slJobLevels option:selected").text();

        let assigned_date = strToDate($('#txtAssignDate').val());
        let deadline = strToDate($('#txtDeadline').val());
        let input_link = $('#txtInputLink').val();
        let remark = $('#txtRemark').val();

        // validateion component inputs

        if (isNaN(assigned_date) || assigned_date === null || isNaN(deadline) || deadline == null) {
            $('#msgError').text('(*) Assign date or deadline is invalid!');
            $('#msgError').show().delay(3000).fadeOut();
            return;
        }


        if (deadline < new Date($.now())) {
            $('#msgError').text('(*) deadline must be later than current time!');
            $('#msgError').show().delay(3000).fadeOut();
            return;
        }

        if (deadline <= assigned_date) {
            $('#msgError').text('(*) deadline must be greater than assign date!');
            $('#msgError').show().delay(3000).fadeOut();
            return;
        }



        $.ajax({
            url: '/tla/task',
            type: 'post',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            data: {
                job: jobId,
                level,
                assigned_date,
                deadline,
                input_link,
                remark
            },
            success: function (data) {
                $('#msgError').text(data.msg);
                $('#msgError').show();
                $('#msgError').hide(2000);
                LoadTasks();
                ChangeJobStatus(jobId, 0);
                LoadJob();
                $('#txtInputLink').val('');
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $('#msgError').text(`(!) ${jqXHR.responseJSON.msg}`);
                $('#msgError').show().delay(3000).fadeOut();
            },
        })



        //reset components value
        $('#msgError').text('');
        $('#txtRemark').val('');

    });
</script>