<div class="row mt-2">
    <div class="col-md-offset-6 col-md-2 col-sm-offset-6 col-sm-2 col-xs-6">
        <select name="" id="slStatus" class="form-control">
            <option value="100">All</option>
            <option value="1">Editor submited</option>
            <option value="-1">Initial</option>
            <option value="0">Editing</option>
            <option value="2">Q.A submited</option>
            <option value="3">DC submited</option>
            <option value="-2">Q.A rejected</option>
            <option value="-3">DC rejected</option>
            <option value="-4">Canceled</option>
        </select>
    </div>
    <div class="col-md-4 col-sm-4 col-xs-6  text-right">
        <div class="input-group">
            <input type="text" class="form-control" placeholder="Seach task..." id="txtSearchTask" />
            <div class="input-group-btn">
                <button class="btn btn-info" type="submit" id="btnSearchTask">
                    <i class="fa fa-search" aria-hidden="true"></i>
                </button>
            </div>
        </div>
    </div>
</div>


<div class="table-responsive mt-1" id="tblDetail">
    <table class="table mt-1 table-striped bg-white text-nowrap">
        <thead class="thead-dark">
            <tr>


                <th scope="col">#</th>
                <th scope="col"></th>
                <th scope="col"></th>
                <th scope="col">Customer</th>
                <th scope="col">Job</th>
                <th scope="col">Level</th>
                <th scope="col">Begin date</th>
                <th scope="col">Deadline</th>
                <th scope="col">Editor</th>
                <th scope="col">Q.A</th>
                <th scope="col" class="text-right">I-N</th>
                <th scope="col" class="text-right">E-T</th>
                <th scope="col">Remark</th>
                <th scope="col">Status</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody id="tblLines">
        </tbody>
    </table>

</div>
<nav aria-label="...">
    <ul class="pagination pagination-sm">
        <li class="page-item disabled">
            <a class="page-link" href="#" tabindex="-1">1</a>
        </li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
    </ul>
</nav>
<div id="contextMenu" class="dropdown clearfix">
    <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu"
        style="display:block;position:static;margin-bottom:5px;" id="funcMenu">
    </ul>
</div>

<%-include('edit-task-modal')%>
    <%-include('assign-editor-modal')%>
        <%-include('assign-qa-modal')%>
            <%-include('task_detail')%>
                <%-include('cancel-task-modal')%>
                    <%-include('bonus-penalty-modal')%>

                        <script src="/js/bootstrap-select.min.js"></script>
                        <script src="/js/common.js"></script>
                        <link href="/css/bootstrap-select.min.css" rel="stylesheet" />

                        <script>
                            var page = 1;
                            var search = '';
                            var customerId = '';
                            var status = 100;
                            var levelId = '';

                            $(document).ready(function () {
                                LoadTasksList();
                            })

                            function AutoAssignEditor() {
                                if (confirm('Are you sure want to set editor automatically')) {
                                    $.ajax({
                                        url: '/tla/queue',
                                        type: 'post',
                                        headers: {
                                            authorization: "Bearer " + localStorage.getItem("accessToken"),
                                        },
                                        data: {
                                            taskId
                                        },
                                        success: function (data) {
                                            alert(data.msg);
                                            LoadTasksList();
                                            taskId = '';
                                        },
                                        error: function (jqXHR, textStatus, errorThrown) {
                                            console.log({ jqXHR, textStatus, errorThrown });
                                            alert(jqXHR.responseJSON.msg);
                                        }
                                    })
                                }
                            }

                            function DeleteTask() {

                                let _id = $(this).closest("tr").attr("id");
                                if (confirm("Are you sure to delete this level?")) {
                                    $.ajax({
                                        url: '/tla/task',
                                        type: 'delete',
                                        headers: {
                                            authorization: "Bearer " + localStorage.getItem("accessToken"),
                                        },
                                        data: {
                                            _id: taskId
                                        },
                                        success: function (data) {
                                            alert(data.msg);
                                            LoadTasksList();
                                            taskId = '';
                                        },
                                        error: function (jqXHR, textStatus, errorThrown) {
                                            $('#msgError').text(jqXHR.responseJSON.msg);
                                        }
                                    })
                                }
                            }


                            $('#btnSearchTask').click(function () {
                                search = $('#txtSearchTask').val();
                                status = $('#slStatus option:selected').val();
                                LoadTasksList();
                            })

                            $(document).on('click', '#funcMenu  li', function () {
                                let fnc = $(this).attr('id');

                                switch (fnc) {
                                    case 'assign-editor':
                                        $('#assignEditorModal').modal();
                                        break;
                                    case 'assign-qa':
                                        $('#assignQAModal').modal();
                                        break;
                                    case 'auto-assign-editor':
                                        AutoAssignEditor();
                                        break;
                                    case 'cancel-task':
                                        $('#cancelTaskModal').modal();
                                        break;
                                    case 'delete-task':
                                        DeleteTask();
                                        break;
                                    case 'edit-task':
                                        $('#editTaskModal').modal();
                                        break;
                                    case 'bonus-penalty':
                                        $('#modalBonusPenalty').modal();
                                        break;
                                }
                            });


                            $(document).on("click", "button[name='functions']", function (e) {
                                var $contextMenu = $("#contextMenu");
                                $contextMenu.css({
                                    display: "block",
                                    left: e.pageX,
                                    top: e.pageY
                                });

                                taskId = $(this).closest('tr').attr('id');
                                customerId = $(this).closest('tr').data('customer');
                                levelId = $(this).closest('tr').data('level');

                                $.ajax({
                                    url: '/tla/task/detail',
                                    type: 'get',
                                    headers: {
                                        authorization: "Bearer " + localStorage.getItem("accessToken"),
                                    },
                                    data: {
                                        taskId
                                    },
                                    success: function (data) {
                                        customerId = data.customer._id;
                                        $('#funcMenu').empty();
                                        let mn = '';
                                        switch (data.task.status) {
                                            case -1:
                                                mn = '<li id="assign-editor"><a tabindex="-1" href="#"><i class="fa fa-user text-primary" aria-hidden="true"></i> Assign Editor </a></li>';
                                                mn += '<li id="auto-assign-editor"><a tabindex="-1" href="#"><i class="fa fa-user text-primary" aria-hidden="true"></i> Auto assign Editor</a></li>';

                                                if (typeof data.task.qa === 'undefined' || data.task.qa === null) {
                                                    mn += '<li id="assign-qa"><a tabindex="-1" href="#"><i class="fa fa-user text-primary" aria-hidden="true"></i> Assign Q.A</a></li>';
                                                }
                                                mn += '<li id="edit-task"><a tabindex="-1" href="#"> <i class="fa fa-edit text-warning"></i> Edit</a></li>';
                                                mn += '<li id="delete-task"><a tabindex="-1" href="#"> <i class="fa fa-trash text-danger" aria-hidden="true"></i> Delete</a></li>';
                                                $('#funcMenu').append(mn);
                                                break;
                                            case 0:
                                                mn = '';
                                                if (typeof data.task.qa === 'undefined' || data.task.qa === null) {
                                                    mn += '<li id="assign-qa"><a tabindex="-1" href="#"><i class="fa fa-user text-primary" aria-hidden="true"></i> Assign Q.A</a></li>';
                                                }
                                                mn += '<li id="edit-task"><a tabindex="-1" href="#"> <i class="fa fa-edit text-warning"></i> Edit</a></li>';
                                                mn += '<li id="delete-task"><a tabindex="-1" href="#"> <i class="fa fa-trash text-danger" aria-hidden="true"></i> Delete</a></li>';
                                                $('#funcMenu').append(mn);
                                                break;
                                            case 1://editor submited
                                                mn = '';
                                                if (typeof data.task.qa === 'undefined' || data.task.qa === null) {
                                                    mn += '<li id="assign-qa"><a tabindex="-1" href="#"><i class="fa fa-user text-primary" aria-hidden="true"></i> Assign Q.A</a></li>';
                                                }
                                                mn += '<li id="cancel-task"><a tabindex="-1" href="#"> <i class="fa fa-ban text-danger" aria-hidden="true"></i> Cancel</a></li>';
                                                mn += '<li id="upload-task"><a tabindex="-1" href="#"> <i class="fa fa-upload text-success" aria-hidden="true"></i>Upload</a></li>';
                                                $('#funcMenu').append(mn);
                                                break;
                                            case 2://Q.A submited
                                                mn = '';

                                                mn += '<li id="cancel-task"><a tabindex="-1" href="#"> <i class="fa fa-ban text-danger" aria-hidden="true"></i> Cancel</a></li>';
                                                mn += '<li id="upload-task"><a tabindex="-1" href="#"> <i class="fa fa-upload text-success" aria-hidden="true"></i>Upload</a></li>';
                                                $('#funcMenu').append(mn);
                                                break;
                                            case 3://DC submited
                                                mn = '';
                                                mn += '<li id="cancel-task"><a tabindex="-1" href="#"> <i class="fa fa-ban text-danger" aria-hidden="true"></i> Cancel</a></li>';
                                                mn += '<li id="upload-task"><a tabindex="-1" href="#"> <i class="fa fa-upload text-success" aria-hidden="true"></i>Upload</a></li>';
                                                if (data.task.bp !== null && data.task.bp.length > 0) {
                                                    if (data.task.bp[data.task.pb.length-1].is_bonus) {
                                                        mn += '<li id="bonus-penalty"><a tabindex="-1" href="#"> <i class="fa fa-trophy text-warning" aria-hidden="true"></i> Bonus</a></li>';
                                                    } else {
                                                        mn += '<li id="bonus-penalty"><a tabindex="-1" href="#"> <i class="fa fa-credit-card text-danger"  aria-hidden="true"></i> Penalty</a></li>';
                                                    }
                                                }
                                                $('#funcMenu').append(mn);
                                                break;
                                            case 4: case 5: case 6:
                                                if (data.task.bp !== null && data.task.bp.length > 0) {
                                                    if (data.task.bp[data.task.pb.length-1].is_bonus) {
                                                        mn += '<li id="bonus-penalty"><a tabindex="-1" href="#"> <i class="fa fa-trophy text-warning" aria-hidden="true"></i> Bonus</a></li>';
                                                    } else {
                                                        mn += '<li id="bonus-penalty"><a tabindex="-1" href="#"> <i class="fa fa-credit-card text-danger"  aria-hidden="true"></i> Penalty</a></li>';
                                                    }
                                                }
                                                $('#funcMenu').append(mn);
                                                break;
                                            case -2://Q.A rejected
                                                mn = '';
                                                mn += '<li id="cancel-task"><a tabindex="-1" href="#"> <i class="fa fa-ban text-danger" aria-hidden="true"></i> Cancel</a></li>';
                                                $('#funcMenu').append(mn);
                                                break;
                                            case -3://DC rejected
                                                mn = '';
                                                mn += '<li id="cancel-task"><a tabindex="-1" href="#"> <i class="fa fa-ban text-danger" aria-hidden="true"></i> Reject</a></li>';
                                                $('#funcMenu').append(mn);
                                                break;
                                            default:
                                                $contextMenu.css({
                                                    display: "none"
                                                });
                                                break;
                                        }
                                    }
                                })


                                $('html').click(function () {
                                    $contextMenu.hide();
                                });

                            });

                            $(document).on("click", "button[name='task-info']", function () {
                                taskId = $(this).closest('tr').attr('id');
                                $('#modalTaskDetail').modal();
                            })


                            $('#slStatus').on('change', function () {
                                status = this.value;
                                LoadTasksList();
                            })


                            function LoadTasksList() {
                                $('#tblLines').empty();
                                $.ajax({
                                    url: '/tla/task/all',
                                    type: 'get',
                                    headers: {
                                        authorization: "Bearer " + localStorage.getItem("accessToken"),
                                    },
                                    data: {
                                        search,
                                        page,
                                        status
                                    },
                                    success: function (data) {
                                        let idx = 1;

                                        data.tasks.forEach(t => {
                                            let tr = '<tr id="' + t._id + '"  data-level="' + t.basic.level._id + '">';
                                            if (t.bp !== null && t.bp.length > 0) {
                                                if (t.bp[data.task.pb.length-1].is_bonus) {
                                                    tr = '<tr id="' + t._id + '" data-customer = "' + t.job.customer + '" data-level="' + t.level._id + '" style="background-color: #A9F5F2">';
                                                } else {
                                                    tr = '<tr id="' + t._id + '" data-customer = "' + t.job.customer + '" data-level="' + t.level._id + '" style="background-color: #F6E3CE">';
                                                }
                                            }
                                            tr += '<td>' + (idx++) + '</td>';

                                            tr += '<td>';
                                            if (t.bp !== null && t.bp.length > 0) {
                                                if (t.bp[data.task.pb.length-1].is_bonus) {
                                                    tr += '<span class="text-success"><i class="fa fa-trophy" aria-hidden="true"></i></span>'

                                                } else {
                                                    tr += '<span class="text-danger"><i class="fa fa-credit-card" aria-hidden="true"></i></span>'
                                                }
                                            }
                                            tr += '</td>'

                                            tr += '<td>';
                                            tr += '<button class="btn btn-xs btn-warning ml-2" name="functions"><i class="fa fa-cog" aria-hidden="true"></i></button>';
                                            tr += '</td>';

                                                tr+='<td class="font-weight-bold text-info">'+getFirstLetters(t.basic.job.customer.firstname + ' ' + t.basic.job.customer.lastname)+getLastLetters(t.basic.job.customer._id)+'</td>';

                                            tr += '<td class="text-primary font-weight-bold">' + t.basic.job.name + '</td>';
                                            tr += '<td class="text-warning font-weight-bold">' + t.basic.level.name + '</td>';
                                            tr += '<td>' + convertISODateToTimeFormat(t.basic.job.received_date) + '</td>';
                                            tr += '<td class="text-danger">';
                                            if (t.basic.deadline.end) {
                                                tr += convertISODateToTimeFormat(t.basic.deadline.end);
                                            }
                                            tr += '</td>';



                                            tr += '<td>';
                                            if (t.status !== -1) {
                                                tr += t.editor[t.editor.length - 1].staff.fullname
                                            }
                                            tr += '</td>';
                                            tr += '<td>';
                                            if (t.qa.length > 0 && !t.qa[t.qa.length-1].unregisted) {
                                                tr += t.qa[t.qa.length - 1].staff.fullname
                                            }
                                            tr += '</td>';


                                            tr += '<td class="text-right">';
                                            if (t.editor.length > 0 && t.editor[t.editor.length - 1].submited.length > 0) {
                                                tr += t.editor[t.editor.length - 1].submited[t.editor[t.editor.length - 1].submited.length - 1].amount
                                            }
                                            tr+= '</td>';

                                            tr += '<td class="text-right">';
                                            if (t.editor.length > 0 && t.editor[t.editor.length - 1].submited.length > 0) {
                                                tr += t.editor[t.editor.length-1].submited.length;
                                            }
                                            tr += '</td>';

                                         


                                            tr += '<td>';
                                            if (typeof t.remarks[t.remarks.length-1] !== 'undefined') {
                                                tr += t.remarks[t.remarks.length-1].content;
                                            }
                                            tr += '</td>';


                                            tr += '<td><i>';

                                            switch (t.status) {
                                                case -1: tr += '<span class="text-info">Initial</span>';
                                                    break;
                                                case 0: tr += '<span class="text-info">Processing</span>';
                                                    break;
                                                case 1:
                                                    {
                                                        if (t.editor[t.editor.length-1].submited.length > 1) {
                                                            tr += '<span class="text-primary">Fixed</span>';
                                                        } else {
                                                            tr += '<span class="text-primary">Edited</span>';
                                                        }
                                                        break;
                                                    }
                                                case 2:
                                                    tr += '<span class="text-success">Q.A ok!</span>';
                                                    break;
                                                case 3:
                                                    tr += '<span class="text-success">DC ok!</span>'
                                                    break;
                                                case -2:
                                                    tr += '<span class="text-danger">Q.A rejected</span>';
                                                    break;
                                                case -3:
                                                    tr += '<span class="text-danger">DC rejected</span>';
                                                    break;
                                                case -4:
                                                    tr += '<span class="text-danger">Sale rejected</span>';
                                                    break;
                                                case -5:
                                                    tr += '<span class="text-danger">Canceled</span>';
                                                    break;
                                                case 4: tr += '<span class="text-success font-weight-bold">Upload</span>'; break;
                                                case 5: tr += '<span class="text-success font-weight-bold">Done</span>'; break;
                                                case 6: tr += '<span class="text-success font-weight-bold">Finish</span>'; break;

                                            }
                                            tr += '</i></td>';
                                            tr += '<td class="text-right">';
                                            tr += '<button class="btn btn-xs btn-info" name="task-info"><i class="fa fa-info-circle" aria-hidden="true"></i></button>';
                                            tr += '</td>';

                                            tr += '</tr>';
                                            $('#tblLines').append(tr);
                                        })
                                    },
                                    error: function (jqXHR, textStatus, errorThrown) {
                                        alert(jqXHR.responseJSON.msg);
                                    }
                                })
                            }
                        </script>



                        <style>
                            #divAddOrUpdateTask {
                                z-index: -1000;
                            }

                            #contextMenu {
                                position: absolute;
                                display: none;
                            }

                            tr:hover {
                                background: #c9e8f7;
                                position: relative;
                            }
                        </style>