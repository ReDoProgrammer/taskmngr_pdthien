<div id="modalCCRejectTask" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">CC reject tasks ( <i class="text-info">only submited tasks by Editor</i> )</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="">Tasks list:</label>
                    <select name="" id="slCCRjTasks" class="form-control"></select>
                </div>
                <div class="form-group">
                    <label for="">Remark:</label>
                    <input type="text" name="" id="txtCCRjRemark" class="form-control">
                </div>

                <div class="row">
                    <div class="col-xs-6">
                        <div class="form-check mt-1">
                            <input class="form-check-input" type="checkbox" value="" id="ckbCCRjAssignEditor" />
                            <label class="form-check-label" for="defaultCheck1">
                                Assign Editor
                            </label>
                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="form-check mt-1">
                            <input class="form-check-input" type="checkbox" value="" id="ckbCCRjAssignQA" />
                            <label class="form-check-label" for="defaultCheck1">
                                Assign Q.A
                            </label>
                        </div>
                    </div>
                </div>

                <div class="row mt-2">
                    <div class="form-group mt-2 col-md-6 col-sm-6 col-xs-12">
                        <div id="colCCRjEditor">
                            <select name="" id="slCCRjEditor" class="form-control selectpicker"
                                data-live-search="true"></select>
                        </div>
                    </div>

                    <div class="form-group mt-2 col-md-6 col-sm-6 col-xs-12">
                        <div id="colCCRjQA">
                            <select name="" id="slCCRjQA" class="form-control  selectpicker"
                                data-live-search="true"></select>
                        </div>
                    </div>
                </div>

                <label class="font-weight-bold text-danger" id="ccRjMsg"></label>

            </div>
            <div class="modal-footer">
                <button class="btn btn-success" id="btnSubmitCCRj">Submit</button>
                <button type="button" class="btn btn-default" id="btnCancelCC">Cancel</button>
            </div>
        </div>

    </div>
</div>

<script>
    var editor = '';
    var qa = '';
    $("#modalCCRejectTask").on('shown.bs.modal', function (e) {
        LoadCCRjTasks();
        $('#colCCRjEditor').hide();
        $('#colCCRjQA').hide();
    });

    $('#modalCCRejectTask').on('hidden.bs.modal', function () {
        $('#JobMngrModal').modal(200);
        LoadTasks();
    })


    $('#btnSubmitCCRj').click(function () {
        let taskId = $('#slCCRjTasks option:selected').val();
        let remark = $('#txtCCRjRemark').val();
        let editor = $('#ckbCCRjAssignEditor').is(':checked') ? $('#slCCRjEditor option:selected').val() : null;
        let qa = $('#ckbCCRjAssignQA').is(':checked') ? $('#slCCRjQA option:selected').val() : null;

        $.ajax({
            url: '/tla/task/cc',
            type: 'put',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            data: {
                taskId,
                remark,
                editor,
                qa,
                ccId
            },
            success: function (data) {
                alert(data.msg);
                $('#modalCCRejectTask').modal('hide');
                LoadJobs();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $('#msgError').text(jqXHR.responseJSON.msg);
            }
        })
    })

    $("#ckbCCRjAssignEditor").change(function () {
        if (this.checked) {
            $('#colCCRjEditor').slideDown(500);
        } else {
            $('#colCCRjEditor').slideUp(500);
        }
    });
    $("#ckbCCRjAssignQA").change(function () {
        if (this.checked) {
            $('#colCCRjQA').slideDown(500);
        } else {
            $('#colCCRjQA').slideUp(500);
        }
    });


    function LoadCCRjEditor(levelId) {
        $.ajax({
            url: '/tla/user/list-editor',
            type: 'get',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            data: {
                levelId
            },
            success: function (data) {
                $('#slCCRjEditor').empty();
                data.editors.forEach(e => {
                    let opt = '<option value="' + e._id + '">' + e.fullname + '( ' + e.username + ' )</option>';
                    $('#slCCRjEditor').append(opt);
                })
                $('#slCCRjEditor').selectpicker();
                $('#slCCRjEditor').selectpicker('refresh');

                if (typeof editor !== 'undefined') {
                    $('#ckbCCRjAssignEditor').prop('checked', true);
                    $('#colCCRjEditor').slideDown(200);
                    $('#slCCRjEditor').val(editor);
                } else {
                    $('#ckbCCRjAssignEditor').prop('checked', false);
                    $('#colCCRjEditor').slideUp(200);
                    $('#slCCRjEditor').val(null);
                }

            },
            error: function (jqXHR, textStatus, errorThrown) {
                $('#msgError').text(jqXHR.responseJSON.msg);
            },
        })
    }


    function LoadCCRjQA(levelId) {
        $.ajax({
            url: '/tla/user/list-qa',
            type: 'get',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            data: {
                levelId
            },
            success: function (data) {
                $('#slCCRjQA').empty();
                data.qas.forEach(q => {
                    let opt = '<option value="' + q._id + '">' + q.fullname + '( ' + q.username + ' )</option>';
                    $('#slCCRjQA').append(opt);
                })
                $('#slCCRjQA').selectpicker();
                $('#slCCRjQA').selectpicker('refresh');

                if (typeof qa !== 'undefined') {
                    $('#ckbCCRjAssignQA').prop('checked', true);
                    $('#slCCRjQA').slideDown(200);
                    $('#slCCRjQA').val(qa);
                } else {
                    $('#ckbCCRjAssignQA').prop('checked', false);
                    $('#slCCRjQA').slideUp(200);
                    $('#slCCRjQA').val(null);
                }

            },
            error: function (jqXHR, textStatus, errorThrown) {
                $('#msgError').text(jqXHR.responseJSON.msg);
            },
        })
    }




    function LoadCCRjTasks() {
        $.ajax({
            url: '/tla/task/list',
            type: 'get',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            data: {
                jobId
            },
            success: function (data) {
                $('#slCCRjTasks').empty();
                data.tasks.forEach(task => {
                    if (task.status > 0) {
                        let opt = '<option value="' + task._id;
                        opt += '" data-level="' + task.basic.level._id + '"';

                        opt += ' data-editor="' + task.editor[task.editor.length - 1].staff._id + '"'

                        if (task.qa.length > 0) {
                            opt += ' data-qa="' + task.qa[task.qa.length - 1].staff._id + '"';
                        }

                        opt += '<span class="font-weight-bold text-danger">[ ' + task.basic.level.name + ' ]</span>';
                        if (task.editor.length > 0) {
                            opt += ' - ' + task.editor[task.editor.length - 1].staff.fullname + '( ' + task.editor[task.editor.length - 1].staff.username + ' )';
                        }
                        opt += '</option>';
                        $('#slCCRjTasks').append(opt);
                    }
                })

                editor = $('#slCCRjTasks option:selected').data('editor');
                qa = $('#slCCRjTasks option:selected').data('qa');

                LoadCC();
                LoadCCRjEditor($('#slCCRjTasks option:selected').data('level'));
                LoadCCRjQA($('#slCCRjTasks option:selected').data('level'));
            }
        })
    }

    function LoadCC() {
        $.ajax({
            url: '/tla/cc/detail',
            type: 'get',
            headers: {
                authorization: "Bearer " + localStorage.getItem("accessToken"),
            },
            data: {
                ccId
            },
            success: function (data) {
                if (data.cc.fixible_task) {
                    $('#slCCRjTasks').val(data.cc.fixible_task);
                    $('#slCCRjTasks').attr('disabled', 'disabled');
                } else {
                    $('#slCCRjTasks').removeAttr('disabled');
                }
                $('#txtCCRjRemark').val(data.cc.remark);

            }
        })
    }
</script>