<script src="/js/bootstrap-select.min.js"></script>
<script src="/js/common.js"></script>
<link href="/css/bootstrap-select.min.css" rel="stylesheet" />
<script type='text/javascript'
  src="https://rawgit.com/RobinHerbots/jquery.inputmask/3.x/dist/jquery.inputmask.bundle.js"></script>


<div id="JobMngrModal" class="modal fade" role="dialog">
  <div class="modal-dialog modal-lg">
    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Job management</h4>
      </div>
      <div class="modal-body">
        <div class="wrapper center-block">
          <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-default">
              <div class="panel-heading active" role="tab" id="headingOne">
                <h4 class="panel-title">
                  <a role="button" data-toggle="collapse" data-parent="#accordion" href="#job_info" aria-expanded="true"
                    aria-controls="collapseOne">
                    Job info
                  </a>
                </h4>
              </div>
              <div id="job_info" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
                <div class="panel-body">
                  <div class="row">
                    <div class="col-md-2 col-sm-4 col-xs-4">Job name:</div>
                    <div class="col-md-4 col-sm-8 col-xs-8">
                      <label class="text-info font-weight-bold lblJobName"></label>
                    </div>

                    <div class="col-md-2 col-sm-4 col-xs-4">Customer:</div>
                    <div class="col-md-4 col-sm-8 col-xs-8">
                      <label class="text-info font-weight-bold lblCustomer"></label>
                    </div>
                  </div>
                  <div class="row mt-2">
                    <div class="col-md-2 co-sm-4 col-xs-4">Received date:</div>
                    <div class="col-md-4 col-sm-8 col-xs-8">
                      <label class="lblReceivedDate"></label>
                    </div>
                    <div class="col-md-2 co-sm-4 col-xs-4">Deadline:</div>
                    <div class="col-md-4 col-sm-8 col-xs-8">
                      <label class="text-danger lblDeliveriedDate"></label>
                    </div>
                  </div>

                  <hr />

                  <div class="row ">
                    <div class="form-group col-md-12 col-sm-12 col-xs-12">
                      <label class="text-warning font-weight-bold">Intruction:</label>
                      <div class="lblIntruction text-danger font-weight-bold mt-2 ml-2"></div>
                    </div>
                  </div>


                  <hr />
                  <div class="row mt-2">
                    <div class="col-md-2 col-sm-2 col-xs-4">Source:</div>
                    <div class="col-md-10 col-sm-10 col-xs-8 lblInputLink"></div>
                  </div>
                </div>
              </div>
            </div>
            <div class="panel panel-default">
              <div class="panel-heading" role="tab" id="headingTwo">
                <h4 class="panel-title">
                  <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#job_style"
                    aria-expanded="false" aria-controls="collapseTwo">
                    Style
                  </a>
                </h4>
              </div>
              <div id="job_style" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                <div class="panel-body">
                  <div class="row">
                    <div class="col-md-2 col-sm-3 col-xs-4">National style:</div>
                    <div class="col-md-4 col-sm-3 col-xs-8 font-weight-bold divNationalStyle">
                    </div>
                    <div class="col-md-2 col-sm-3 col-xs-4">Color:</div>
                    <div class="col-md-4 col-sm-3 col-xs-8 font-weight-bold divColor"></div>
                  </div>

                  <div class="row">
                    <div class="col-md-2 col-sm-3 col-xs-4">Size:</div>
                    <div class="col-md-4 col-sm-3 col-xs-8 font-weight-bold divSize"></div>

                    <div class="col-md-2 col-sm-3 col-xs-4">Output:</div>
                    <div class="col-md-4 col-sm-3 col-xs-8 font-weight-bold divOutput"></div>
                  </div>

                  <div class="row">
                    <div class="col-md-2 col-sm-3 col-xs-4">Cloud:</div>
                    <div class="col-md-10 col-sm-9 col-xs-8 font-weight-bold divCloud"></div>
                  </div>


                  <hr />
                  <div class="row">
                    <div class="col-md-1 col-sm-1 col-xs-2 mt-1">Align: </div>
                    <div class="font-weight-bold col-md-5 col-sm-5 col-xs-10 mt-1 divAlign"></div>

                    <div class="col-md-1 col-sm-1 col-xs-2 mt-1">Sky:</div>
                    <div class=" font-weight-bold col-md-5 col-sm-5 col-xs-10 mt-1 divSky"></div>
                  </div>

                  <div class="row">
                    <div class="col-md-1 col-sm-1 col-xs-2 mt-1">Fire:</div>
                    <div class="font-weight-bold col-md-5 col-sm-5 col-xs-10 mt-1 divFire"></div>

                    <div class="col-md-1 col-sm-1 col-xs-2 mt-1">TV:</div>
                    <div class=" font-weight-bold col-md-5 col-sm-5 col-xs-10 mt-1 divTV"></div>
                  </div>

                  <div class="row">
                    <div class="col-md-1 col-sm-1 col-xs-2 mt-1">Grass:</div>
                    <div class="font-weight-bold col-md-11 col-sm-11 col-xs-10 mt-1 divGrass"></div>
                  </div>

                  <hr />
                  <div class="row mt-2">
                    <div class="col-md-2 col-sm-2 col-xs-4">
                      Style note:
                    </div>

                    <div class="col-md-10 col-sm-10 col-xs-8">
                      <label class="text-danger font-weight-bold lblStyleNote"></label>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div class="panel panel-default">
              <div class="panel-heading" role="tab" id="headingThree">
                <h4 class="panel-title">
                  <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#job_combo"
                    aria-expanded="false" aria-controls="collapseThree">
                    Combo
                  </a>
                </h4>
              </div>
              <div id="job_combo" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingThree">
                <div class="panel-body">
                  <div class="table-responsive  table-responsive-sm table-responsive-xs mt-2">
                    <table class="table mt-1 table-striped bg-white text-dark nowrap text-nowrap">
                      <thead class="thead-dark">
                        <tr>
                          <th scope="col">#</th>
                          <th scope="col">Level</th>
                          <th scope="col" class="text-right">Quantity</th>
                        </tr>
                      </thead>
                      <tbody class="tblComboLines"></tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>

            <div class="panel panel-info">
              <div class="panel-heading" role="tab" id="headingThree">
                <h4 class="panel-title">
                  <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#task_list"
                    aria-expanded="false" aria-controls="collapseThree">
                    Task list
                  </a>
                </h4>
              </div>
              <div id="task_list" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingThree">
                <div class="panel-body">
                  <button class="btn btn-sm btn-success" id="btnAddTask"><i class="fa fa-plus"></i> Add Task</button>
                  <div class="table-responsive  table-responsive-sm table-responsive-xs mt-2">
                    <table class="table mt-1 table-striped bg-white text-dark nowrap text-nowrap">
                      <thead class="thead-dark">
                        <tr>

                          <th scope="col">#</th>
                          <th scope="col">Level</th>
                          <th scope="col">Assign date</th>
                          <th scope="col">Deadline</th>
                          <th scope="col">Remark</th>
                          <th scope="col">Editor</th>
                          <th scope="col">Q.A</th>
                          <th scope="col">Link</th>
                          <th scope="col">Status</th>
                          <th></th>
                        </tr>
                      </thead>
                      <tbody id="tblTasks"></tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>

            <div class="panel panel-default">
              <div class="panel-heading" role="tab" id="headingThree">
                <h4 class="panel-title">
                  <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#job_cc"
                    aria-expanded="false" aria-controls="collapseThree">
                    CC
                  </a>
                </h4>
              </div>
              <div id="job_cc" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingThree">
                <div class="panel-body">
                  <div class="table-responsive  table-responsive-sm table-responsive-xs mt-2">
                    <table class="table mt-1 table-striped bg-white text-dark nowrap text-nowrap">
                      <thead class="thead-dark">
                        <tr>
                          <th scope="col">#</th>
                          <th scope="col">Task</th>
                          <th scope="col">Remark</th>
                          <th scope="col" class="text-right">Status</th>
                          <th></th>
                        </tr>
                      </thead>
                      <tbody class="tblCCList"></tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>



            <div class="panel panel-primary" id="panel_task">
              <div class="panel-body">
                <div class="row">
                  <div class="col-md-7 col-sm-6 col-xs-6 form-group">
                    <label for="">Customer level</label>
                    <select name="" id="slCustomerLevles" class="form-control"></select>
                  </div>
                  <div class="col-md-5 col-sm-6 col-xs-6 form-group">
                    <label for="">Local level</label>
                    <select name="" id="slLocalLevels" class="form-control"></select>
                  </div>
                </div>

                <div class="row">
                  <div class="col-md-5 col-sm-5 col-xs-5">
                    <div class="form-group">
                      <label for="">Assign Date<span class="text-danger font-weight-bold">(*)</span>: </label>
                      <input type="text" class="inputDate form-control" id="txtAssignDate">
                    </div>
                  </div>

                  <div class="col-md-2 col-sm-2 col-xs-2">
                    <div class="form-group">
                      <label for="">Hours:</label>
                      <input type="text" class="form-control text-right" id="txtDuration" value="0">
                    </div>
                  </div>

                  <div class="col-md-5 col-sm-5 col-xs-5">
                    <div class=" form-group">
                      <label for="">Deadline<span class="text-danger font-weight-bold">(*)</span>:</label>
                      <input type="text" class="inputDate form-control" id="txtDeadline">
                    </div>
                  </div>
                </div>

                <div class="row mt-2">
                  <div class="form-group col-md-12 col-sm-12 col-xs-12">
                    <label for="">Images Link:</label>
                    <input type="text" class="form-control" id="txtInputLink">
                  </div>
                </div>

                <div class="row mt-2">
                  <div class="form-group col-md-12 col-sm-12 col-xs-12">
                    <label for="">Remark:</label>
                    <input type="text" name="txtRemark" id="txtRemark" class="form-control" placeholder="Task remark">
                  </div>
                </div>

                <hr />
                <div class="row">
                  <div class="col-xs-6">
                    <div class="form-check mt-1">
                      <input class="form-check-input" type="checkbox" value="" id="ckbAssignEditor" />
                      <label class="form-check-label" for="defaultCheck1">
                        Assign Editor
                      </label>
                    </div>
                  </div>
                  <div class="col-xs-6">
                    <div class="form-check mt-1">
                      <input class="form-check-input" type="checkbox" value="" id="ckbAssignQA" />
                      <label class="form-check-label" for="defaultCheck1">
                        Assign Q.A
                      </label>
                    </div>
                  </div>
                </div>

                <div class="row mt-2">
                  <div class="form-group mt-2 col-md-6 col-sm-6 col-xs-12">
                    <div id="colEditor">
                      <select name="" id="slEditor" class="form-control selectpicker" data-live-search="true"></select>
                    </div>
                  </div>

                  <div class="form-group mt-2 col-md-6 col-sm-6 col-xs-12">
                    <div id="colQA">
                      <select name="" id="slQA" class="form-control  selectpicker" data-live-search="true"></select>
                    </div>
                  </div>
                </div>

                <div class="row mt-2">
                  <div class="col-md-12 form-group">
                    <label for="">Initial status:</label>
                    <div>
                      <label class="radio-inline"><input type="radio" name="optradio" id="rbtWait">Wait</label>
                      <label class="radio-inline"><input type="radio" name="optradio" checked
                          id="rbtStart">Start</label>
                     
                    </div>
                  </div>
                </div>

                <div class="row mt-2">
                  <div class="col-md-12">
                    <label for="" class="font-weight-bold text-danger" id="lblError"></label>
                  </div>
                </div>
              </div>
              <div class="panel-footer text-right">
                <button class="btn btn-success" id="btnSubmit">
                  <i class="fa fa-floppy-o" aria-hidden="true"></i> Submit changes
                </button>
                <button class="btn btn-default" id="btnCancelTask">Cancel</button>
              </div>
            </div>


          </div>
        </div>
      </div>

    </div>

  </div>
</div>


<script>
  let idx = 1;
  var taskId = '';
  var levelId = '';
  var cc = '';
  var ccRemark = '';
  var fee = false;
  var CustomerLevels = [];

  $("#slCustomerLevles").change(function () {
    if (cc.length > 0) {
      LoadAvailableTasks();
    } else {
      LoadLocalLevel();
    }
  });
  $("#slLocalLevels").change(function () {
    LoadQA();
    LoadEditor();
  });


  $(document).on("click", "button[name='btnCC']", function () {
    cc = $(this).closest('tr').attr('id');
    fee = $(this).closest('tr').data('fee');

    let rootId = $(this).closest('tr').data('root');
    ccRemark = $(this).closest('tr').find('td[name="remark"]').text();
    if (fee === true) {
      BindContract();
    } else {
      if (rootId) {
        $('#slCustomerLevles').val(rootId);
      }
      LoadAvailableTasks();
    }
    $('#panel_task').slideDown(500);
  })


  $('#btnSubmit').click(function () {
    let customer_level = $('#slCustomerLevles option:selected').val();
    let is_root = parseInt($('#slCustomerLevles option:selected').data('root'));
    let level = $("#slLocalLevels option:selected").val();
    let assigned_date = strToDate($('#txtAssignDate').val());
    let deadline = strToDate($('#txtDeadline').val());
    let input_link = $('#txtInputLink').val();
    let remark = $('#txtRemark').val();
    let editor = $("#ckbAssignEditor").is(':checked') ? $('#slEditor option:selected').val() : null;
    let qa = $("#ckbAssignQA").is(':checked') ? $('#slQA option:selected').val() : null;
    let status = -1;
    // validateion component inputs
    if (isNaN(assigned_date) || assigned_date === null) {
      $('#msgError').text('(*) Assign date or deadline is invalid!');
      $('#msgError').show().delay(3000).fadeOut();
      return;
    }

    if (cc.length == 0) {
      if (taskId.trim().length == 0) {
        $.ajax({
          url: '/tla/task',
          type: 'post',
          headers: {
            authorization: "Bearer " + localStorage.getItem("accessToken"),
          },
          data: {
            jobId,
            customer_level,
            is_root,
            level,
            assigned_date,
            deadline,
            input_link,
            remark,
            qa,
            editor,
            start: $('#rbtStart').is(':checked'),
            cc
          },
          success: function (data) {
            Swal.fire({
              icon: 'success',
              title: 'Successfully!',
              text: data.msg
            })
            LoadTasks();
            $('#txtInputLink').val('');
            $('#txtRemark').val('');
            $('#divAddOrUpdateTask').slideUp(500);
          },
          error: function (jqXHR, textStatus, errorThrown) {
            $('#msgError').text(`(!) ${jqXHR.responseJSON.msg}`);
            $('#msgError').show().delay(10000).fadeOut();
          },
        })
      } else {
        $.ajax({
          url: '/tla/task',
          type: 'put',
          headers: {
            authorization: "Bearer " + localStorage.getItem("accessToken"),
          },
          data: {
            taskId,
            level,
            assigned_date,
            deadline,
            input_link,
            remark,
            qa,
            editor,
            start: $('#rbtStart').is(':checked'),
            cc
          },
          success: function (data) {
            Swal.fire({
              icon: 'success',
              title: 'Successfully!',
              text: data.msg
            })
            LoadTasks();
            LoadJob();
            $('#txtInputLink').val('');
            $('#txtRemark').val('');
            $('#divAddOrUpdateTask').slideUp(500);
          },
          error: function (jqXHR, textStatus, errorThrown) {
            $('#msgError').text(`(!) ${jqXHR.responseJSON.msg}`);
            $('#msgError').show().delay(3000).fadeOut();
          },
        })
      }
    } else {
      if (fee) {
        $.ajax({
          url: '/tla/task',
          type: 'post',
          headers: {
            authorization: "Bearer " + localStorage.getItem("accessToken"),
          },
          data: {
            jobId,
            customer_level,
            is_root,
            level,
            assigned_date,
            deadline,
            input_link,
            remark,
            qa,
            editor,
            start: $('#rbtStart').is(':checked'),
            cc
          },
          success: function (data) {
            Swal.fire({
              icon: 'success',
              title: 'Successfully!',
              text: data.msg
            })
            LoadTasks();
            $('#txtInputLink').val('');
            $('#txtRemark').val('');
            $('#divAddOrUpdateTask').slideUp(500);
          },
          error: function (jqXHR, textStatus, errorThrown) {
            $('#msgError').text(`(!) ${jqXHR.responseJSON.msg}`);
            $('#msgError').show().delay(10000).fadeOut();
          },
        })
      } else {
        $.ajax({
          url: '/tla/task/cc',
          type: 'put',
          headers: {
            authorization: "Bearer " + localStorage.getItem("accessToken"),
          },
          data: {
            taskId: $('#slLocalLevels option:selected').data('task'),
            level,
            assigned_date,
            deadline,
            input_link,
            remark,
            qa,
            editor,
            start: $('#rbtStart').is(':checked'),
            cc
          },
          success: function (data) {
            Swal.fire({
              icon: 'success',
              title: 'Successfully!',
              text: data.msg
            })
            LoadTasks();
            LoadJob();
            $('#txtInputLink').val('');
            $('#txtRemark').val('');
            $('#divAddOrUpdateTask').slideUp(500);
            cc = '';

          },
          error: function (jqXHR, textStatus, errorThrown) {
            $('#msgError').text(`(!) ${jqXHR.responseJSON.msg}`);
            $('#msgError').show().delay(3000).fadeOut();
          }
        })
      }
    }
    $('#panel_task').slideUp(500);
  })

  $("#ckbAssignEditor").change(function () {
    if (this.checked) {
      $('#colEditor').slideDown(500);
    } else {
      $('#colEditor').slideUp(500);
    }
  });


  $("#ckbAssignQA").change(function () {
    if (this.checked) {
      $('#colQA').slideDown(500);
    } else {
      $('#colQA').slideUp(500);
    }
  });

  $('#btnCancelTask').click(function () {
    $('#panel_task').slideUp(500);
  })

  $(document).on('click','button[name="btnEditTask"]',function(e){
    let taskId = $(this).closest('tr').attr('id');
    $('#panel_task').slideDown(500);
    $.ajax({
      url:'/tla/task/detail',
      type:'get',
      headers: {
        authorization: "Bearer " + localStorage.getItem("accessToken"),
      },
      data:{taskId},
      success:function(data){
        $('#slLocalLevels').val();
        $('#txtAssignDate').val();
        $('#txtDeadline').val();
        $('#txtInputLink').val(data.task.basic.link.input);
        $('#txtRemark').val(data.task.remarks[data.task.remarks.length-1].content)


        if(data.task.editor.length > 0){
          $('#ckbAssignEditor').prop('checked', true);
        }else{
          $('#ckbAssignEditor').prop('checked', false);
        }

        if(data.task.qa.length>0){
          $('#ckbAssignQA').prop('checked', true);
        }else{
          $('#ckbAssignQA').prop('checked', false);
        }

        if(data.task.status === -10){

        }else{

        }

      }
    })
  })

  $('#btnAddTask').click(function () {
    taskId = '';
    cc = '';
    $('#ckbAssignEditor').prop('checked', false);
    $('#ckbAssignQA').prop('checked', false);
    $('#colEditor').slideUp(300);
    $('#colQA').slideUp(300);
    $('#rbtStart').prop('checked', true);
    $('#panel_task').slideDown(500);
  })
  $("#JobMngrModal").on('shown.bs.modal', function (e) {
    $('#panel_task').slideUp(200);
    LoadTasks();
    LoadJob();
    LoadCCList();
    LoadCustomer();
    $('#divLevel').hide();
    $('#divEditTask').hide();
    $('#divAssign').hide();
    $('#divAddOrUpdateTask').hide();
    $('#txtAssignDate').val(getCurrentTime())
  });
</script>

<script>
  function LoadAvailableTasks() {
    $.ajax({
      url: '/tla/task/list-based-on-root',
      type: 'get',
      headers: {
        authorization: "Bearer " + localStorage.getItem("accessToken"),
      },
      data: {
        jobId,
        rootId: $('#slCustomerLevles option:selected').val(),
        is_root: parseInt($('#slCustomerLevles option:selected').data('root'))
      },
      success: function (data) {
        $('#slLocalLevels').empty();
        data.tasks.forEach(t => {
          let opt = '<option value="' + t.basic.level._id + '" data-task="' + t._id + '">' + t.basic.level.name + '</option>';
          $('#slLocalLevels').append(opt);
        })
        LoadQA();
        LoadEditor();
        $.ajax({
          url: '/tla/task/detail',
          type: 'get',
          headers: {
            authorization: "Bearer " + localStorage.getItem("accessToken"),
          },
          data: {
            taskId: $('#slLocalLevels option:selected').data('task')
          },
          success: function (data) {
            levelId = data.task.basic.level._id;
            $('#divAddOrUpdateTask').slideUp(200);
            $('#divAddOrUpdateTask').slideDown(1000);
            $('#slJobLevels').val(data.task.basic.level._id);
            $('#slJobLevels').attr("disabled", true);
            $('#txtAssignDate').val(convertISODateToTimeFormat(data.task.basic.deadline.begin));
            if (data.task.basic.deadline.end) {
              $('#txtDeadline').val(convertISODateToTimeFormat(data.task.basic.deadline.end));
            }
            $('#txtInputLink').val(data.task.basic.link.input);
            $('#txtRemark').val(ccRemark);
            $('#ckbAssignQA').prop('checked', (data.task.qa.length > 0 && data.task.qa[data.task.qa.length - 1].tla !== 'undefined') ? true : false);
            if (data.task.editor.length === 0) {
              $('#ckbAssignEditor').show();
              $('#ckbAssignEditor').prop('checked', false);
              $('#colEditor').slideUp();
            } else {
              $('#ckbAssignEditor').prop('checked', true);
              $('#ckbAssignEditor').show();
              $('#colEditor').show();
              $('#slEditor').val(data.task.editor[data.task.editor.length - 1].staff._id).selectpicker('refresh');
            }
            if ((data.task.qa.length > 0 && data.task.qa[data.task.qa.length - 1].tla !== 'undefined')) {
              $('#colQA').show();
              $('#slQA').val(data.task.qa[data.task.qa.length - 1].staff._id).selectpicker('refresh');
              if (data.task.status > 1) {
                $('#ckbAssignQA').attr("disabled", true);
                $('#slQA').attr("disabled", true);
              } else {
                $('#ckbAssignQA').attr("disabled", false);
                $('#slQA').attr("disabled", false);
              }
            } else {
              $('#colQA').hide();
            }
            
            if (data.task.status == -10) {
              $('#rbtPause').prop('checked', true);
            } else {
              $('#rbtStart').prop('checked', true);
            }
          }
        })
      }
    })
  }


  function LoadEditor() {
    $.ajax({
      url: '/tla/user/list-editor',
      type: 'get',
      headers: {
        authorization: "Bearer " + localStorage.getItem("accessToken"),
      },
      data: {
        levelId: $('#slLocalLevels option:selected').val()
      },
      success: function (data) {
        $('#slEditor').empty();
        data.editors.forEach(e => {
          let opt = '<option value="' + e._id + '">' + e.fullname + ' ( ' + e.username + ' )</option>';
          $('#slEditor').append(opt);
        })
        $('#slEditor').selectpicker();
        $('#slEditor').selectpicker('refresh');
      },
      error: function (jqXHR, textStatus, errorThrown) {
        $('#msgError').text(jqXHR.responseJSON.msg);
        $('#msgError').fadeIn().delay(3000).fadeOut();
      },
    })
  }
  function LoadQA() {
    $.ajax({
      url: '/tla/user/list-qa',
      type: 'get',
      headers: {
        authorization: "Bearer " + localStorage.getItem("accessToken"),
      },
      data: {
        levelId: $('#slLocalLevels option:selected').val()
      },
      success: function (data) {
        $('#slQA').empty();
        data.qas.forEach(q => {
          let opt = '<option value="' + q._id + '">' + q.fullname + ' ( ' + q.username + ' )</option>';
          $('#slQA').append(opt);
        })
        $('#slQA').selectpicker();
        $('#slQA').selectpicker('refresh');
      },
      error: function (jqXHR, textStatus, errorThrown) {
        $('#msgError').text(jqXHR.responseJSON.msg);
        $('#msgError').fadeIn().delay(3000).fadeOut();
      },
    })
  }

  function LoadLocalLevel() {
    $.ajax({
      url: '/tla/job/local-level',
      type: 'get',
      headers: {
        authorization: "Bearer " + localStorage.getItem("accessToken"),
      },
      data: {
        customer_level: $('#slCustomerLevles option:selected').val(),
        is_root: $('#slCustomerLevles option:selected').data('root') == '1' ? true : false
      },
      success: function (data) {
        $('#slLocalLevels').empty();
        data.levels.forEach(l => {
          let opt = '<option value="' + l._id + '">' + l.name + '</option>';
          $('#slLocalLevels').append(opt);
        })
        LoadQA();
        LoadEditor();
      }
    })
  }


  function BindContract() {
    $('#slCustomerLevles').empty();
    CustomerLevels.forEach(l => {
      $('#slCustomerLevles').append('<option value="' + l._id + '" data-root="' + l.is_root + '">' + l.name + '</option>')
    })
    LoadLocalLevel();
  }

  function LoadCCList() {
    $.ajax({
      url: '/tla/job/list-cc',
      type: 'get',
      headers: {
        authorization: "Bearer " + localStorage.getItem("accessToken"),
      },
      data: {
        jobId
      },
      success: function (data) {
        $('.tblCCList').empty();
        let idx = 1;
        data.cc.forEach(c => {
          let tr = '<tr id="' + c._id + '"';
          if (c.root) {
            tr += ' data-root="' + c.root._id + '"';
          }
          if (c.parents) {
            tr += ' data-root="' + c.parents._id + '"';
          }

          tr += 'data-fee = "' + c.fee + '"';

          tr += '>';
          tr += '<td>' + (idx++) + '</td>';
          tr += '<td class="font-weight-bold text-danger text-left">';
          if (c.root) {
            tr += c.root.name;
          }
          if (c.parents) {
            tr += c.parents.name;
          }
          tr += '</td>';
          tr += '<td class="text-left" name="remark">' + c.remark + '</td>';
          tr += '<td class="text-left font-italic text-right">';
          tr += '</td>';
          tr += '<td class="text-right">';
          tr += '<button class="btn btn-xs btn-danger" name="btnCC"><i class="fa fa-play" aria-hidden="true"></i></button>';
          tr += '</td>'
          tr += '</tr>';
          $('.tblCCList').append(tr);
        })
      }
    })
  }

  function LoadTasks() {
    $.ajax({
      url: '/tla/task/list',
      type: 'get',
      headers: {
        authorization: "Bearer " + localStorage.getItem("accessToken"),
      },
      data: {
        jobId
      },
      success: function (data) {
        let idx = 1;
        $("#tblTasks").empty();
        data.tasks.forEach(t => {
          let tr = '<tr id="' + t._id + '">';
          tr += "<td>" + idx++ + "</td>";
          tr += "<td class='font-weight-bold text-info'>";
          if (t.status == -10) {
            tr += '<i class="fa fa-pause text-danger" aria-hidden="true" style="margin-right: 10px;"></i>';
          }
          tr += t.basic.level.name;
          if (t.fixible_task || t.additional_task) {
            tr += ' <span class="text-danger"><i class="fa fa-cc" aria-hidden="true"></i></span>';
          }
          tr += "</td>";
          tr += "<td>" + convertISODateToTimeFormat(t.basic.deadline.begin) + "</td>";
          tr += '<td>';
          if (typeof t.basic.deadline.end !== 'undefined') {
            tr += convertISODateToTimeFormat(t.basic.deadline.end);
          }
          tr += '</td>';
          tr += '<td>';
          if (t.remarks.length > 0) {
            tr += t.remarks[t.remarks.length - 1].content;
          }
          tr += '</td>';
          tr += '<td>';
          if (t.editor.length > 0)
            tr += t.editor[t.editor.length - 1].staff.username;
          tr += "</td>";
          tr += '<td>';
          if (typeof t.qa !== 'undefined' && t.qa.length > 0)
            tr += t.qa[t.qa.length - 1].staff.username;
          tr += '</td>'
          tr += '<td>';
          if (isValidHttpUrl(t.basic.link.input)) {
            tr += '<a href="' + t.basic.link.input + '" target="_blank">Link</a>'
          } else {
            tr += t.basic.link.input
          }
          tr += '</td>';
          tr += '<td class="font-italic">';
          switch (t.status) {
            case -10:
              tr += '<span class="text-danger font-weight-bold">Wait</span>';
              break;
            case 0: tr += '<span class="text-info">Processing</span>'; break;
            case 1: {
              if (t.editor[0].submited.times > 1) {
                tr += '<span class="text-primary">Fixed</span>';
              } else {
                tr += '<span class="text-primary">Edited</span>';
              }
              break;
            }
            case 2: tr += '<span class="text-success">Q.A ok</span>'; break;
            case 3: tr += '<span class="text-success">DC ok</span>'; break;
            case -1: tr += '<span class="text-info">Initial</span>'; break;
            case -2: tr += '<span class="text-danger">Q.A reject</span>'; break;
            case -3: tr += '<span class="text-danger">DC reject</span>'; break;
            case -6: tr += '<span class="text-danger">Customer Reject</span>'; break;
            case 4: tr += '<span class="text-success">Upload</span>'; break;
            case 5: tr += '<span class="text-success">Done</span>'; break;
            case 6: tr += '<span class="text-success">Finish</span>'; break;
          }
          tr += '</td>';
          tr += '<td class="text-right">';
          if (t.status < 1) {
            tr += '<button class="ml-1 btn btn-xs btn-danger" name="btnDelTask"><i class="fa fa-trash text-white" aria-hidden="true"></i></button>';
          }
          tr += '<button class="ml-1 btn btn-xs btn-warning" name="btnEditTask"><i class="fa fa-edit"></i></button>';
          tr += '</td>';
          tr += "</tr>";
          $("#tblTasks").append(tr);
        })
      },
      error: function (jqXHR, textStatus, errorThrown) {
        $('#msgError').text(jqXHR.responseJSON.msg);
        $('#msgError').show().delay(3000).fadeOut();
      },
    });
  }
</script>



<script>
 
  $('.panel-collapse').on('show.bs.collapse', function () {
    $(this).siblings('.panel-heading').addClass('active');
  });

  $('.panel-collapse').on('hide.bs.collapse', function () {
    $(this).siblings('.panel-heading').removeClass('active');
  });
  $('#txtDuration').keyup(function (e) {
    if (/\D/g.test(this.value)) {
      // Filter non-digits from input value.
      this.value = this.value.replace(/\D/g, '');
    }
    let duration = parseInt($('#txtDuration').val());
    let assigned_date = strToDate($('#txtAssignDate').val());
    let deadline = assigned_date.addHours(duration);
    $('#txtDeadline').val(convertISODateToTimeFormat(deadline));
  });
</script>

<style>
  .panel-heading {
    padding: 0;
    border: 0;
  }

  .panel-title>a,
  .panel-title>a:active {
    display: block;
    padding: 10px;
    color: #555;
    font-size: 14px;
    font-weight: bold;
    text-transform: uppercase;
    letter-spacing: 1px;
    word-spacing: 3px;
    text-decoration: none;
  }

  .panel-heading a:before {
    font-family: 'Glyphicons Halflings';
    content: "\e114";
    float: right;
    transition: all 0.5s;
  }

  .panel-heading.active a:before {
    -webkit-transform: rotate(180deg);
    -moz-transform: rotate(180deg);
    transform: rotate(180deg);
  }
</style>