<div class="row">
  <div class="offset-md-9 col-md-3 text-right">
    <!-- Another variation with a button -->
    <div class="input-group">
      <input type="text" class="form-control" placeholder="Seach any job" id="txtSearch" />
      <div class="input-group-btn">
        <button class="btn btn-info" type="submit" id="btnSearch">
          <i class="fa fa-search" aria-hidden="true"></i>
        </button>
      </div>
    </div>
  </div>
</div>


<table class="table table-striped table-hover js-table mt-2">
  <thead>
    <!-- <th><input type="checkbox" name="job_checked"></th> -->
    <th>#</th>
    <th>Customer</th>
    <th>Job</th>
    <th>Receive date</th>
    <th>Delivery date</th>
    <th>Status</th>
    <th></th>
  </thead>
  <tbody id="tblJobs"></tbody>
</table>



<nav aria-label="..." class="mt-3">
  <ul class="pagination pagination-sm">
    <li class="page-item disabled">
      <a class="page-link" href="#" tabindex="-1">1</a>
    </li>
    <li class="page-item"><a class="page-link" href="#">2</a></li>
    <li class="page-item"><a class="page-link" href="#">3</a></li>
  </ul>
</nav>

<!-- <div id="contextMenu" class="dropdown clearfix">
  <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu"
    style="display:block;position:static;margin-bottom:5px;" id="funcMenu">
  </ul>
</div> -->



<%-include('job-detail-modal')%>


  <!-- <link rel="stylesheet" href="/css/bootstrap-table.min.css"> -->
  <script src="/js/common.js"></script>


  <script>
    var search = "";
    var page = 1;
    var jobId = '';
    var customerId = '';




    var $table = $('.js-table');

    // $table.find('.js-view-parents').on('click', function (e) {
    $(document).on("click", "button[name='js-view-parents']", async function (e) {

      var $btn = $(e.target), $row = $btn.closest('tr'), $nextRow = $row.next('tr.expand-child');

      $btn.toggleClass('fa-minus');
      // if .expand-chid row exist already, toggle
      if ($nextRow.length) {
        $nextRow.toggle($btn.hasClass('fa-minus'));
        // if not, create .expand-child row
      } else {
        var newRow = '<tr class="expand-child" id="collapse' + $btn.data('id') + '">' +
          '<td colspan="8">' +
          '<table class="table table-condensed table-bordered table-striped" width=100% >' +
          '<thead>' +
          '<tr>' +
          '<th class="text-right  ">#</th>' +
          '<th>Level</th>' +
          '<th>Editor</th>' +
          '<th>Q.A</th>' +
          '<th>DC</th>' +
          '<th>Uploaded by</th>' +
          '<th>Uploaded at</th>' +
          '<th>Status</th>' +
          // '<th class="text-center"><input type="checkbox" name="check_all_tasks"></th>' +
          '</tr>' +
          '</thead>' +
          '<tbody>';
        jobId = $(this).closest('tr').attr('id');



        await $.ajax({
          url: '/accountant/task/list-by-job',
          type: 'get',
          headers: {
            authorization: "Bearer " + localStorage.getItem("accessToken"),
          },
          data: {
            jobId
          },
          success: function (data) {
            let idx = 1;
            data.tasks.forEach(t => {
              newRow += '<tr>';
              newRow += '<td class="text-right">' + (idx++) + '</td>';
              newRow += '<td class="font-weight-bold text-primary">' + t.level.name + '</td>';
              newRow += '<td>';
              if (typeof t.editor !== 'undefined' && t.editor !== null) {
                newRow += t.editor.fullname;
              }
              newRow += '</td>';

              newRow += '<td>';
              if (typeof t.qa !== 'undefined' && t.qa !== null) {
                newRow += t.qa.fullname;
              }
              newRow += '</td>';

              newRow += '<td>';
              if (typeof t.dc !== 'undefined' && t.dc !== null) {
                newRow += t.dc.fullname;
              }
              newRow += '</td>';

              newRow += '<td>';
              if (typeof t.uploaded_by !== 'undefined' && t.uploaded_by !== null) {
                newRow += t.uploaded_by.fullname;
              }
              newRow += '</td>';

              newRow += '<td>';
              if (typeof t.uploaded_by !== 'undefined' && t.uploaded_by !== null) {
                newRow += convertISODateToTimeFormat(t.uploaded_at);
              }
              newRow += '</td>';


              newRow += '<td><i>';

              switch (t.status) {
                case -1: newRow += '<span class="text-info">Initial</span>';
                  break;
                case 0: newRow += '<span class="text-info">Processing</span>';
                  break;
                case 1:
                  {
                    if (t.edited_time > 1) {
                      newRow += '<span class="text-primary">Fixed</span>';
                    } else {
                      newRow += '<span class="text-primary">Edited</span>';
                    }
                    break;
                  }
                case 2:
                  newRow += '<span class="text-success">Q.A ok!</span>';
                  break;
                case 3:
                  newRow += '<span class="text-success">DC ok!</span>'
                  break;
                case -2:
                  newRow += '<span class="text-danger">Q.A rejected</span>';
                  break;
                case -3:
                  newRow += '<span class="text-danger">DC rejected</span>';
                  break;
                case -4:
                  newRow += '<span class="text-danger">Sale rejected</span>';
                  break;
                case -5:
                  newRow += '<span class="text-danger">Canceled</span>';
                  break;
                case 4: newRow += '<span class="text-success font-weight-bold">Upload</span>'; break;
                case 5: newRow += '<span class="text-success font-weight-bold">Done</span>'; break;
                case 6: newRow += '<span class="text-success font-weight-bold">Finish</span>'; break;

              }
              newRow += '</i></td>';


              // newRow += '<td class="text-center">';
              // newRow += '<input type="checkbox" name="check_task">'
              // newRow += '</td>';
              newRow += '</tr>';
            })
          }
        })
        newRow += '</tbody></table></td></tr>';
        // set next row
        $nextRow = $(newRow).insertAfter($row);


        /*}
            });*/
      }
    });





    $(document).on("click", "button[name='btn-job-functions']", function (e) {
      var $contextMenu = $("#contextMenu");
      $contextMenu.css({
        display: "block",
        left: e.pageX,
        top: e.pageY
      });

      jobId = $(this).closest('tr').attr('id');

      $.ajax({
        url: '/sale/job/detail',
        type: 'get',
        headers: {
          authorization: "Bearer " + localStorage.getItem("accessToken"),
        },
        data: {
          jobId
        },
        success: function (data) {


          $('#funcMenu').empty();
          let mn = '';
          mn = '<li id="submit-task"><a tabindex="-1" href="#"> <i class="fa fa-paper-plane text-success" aria-hidden="true"></i> Q.A ok</a></li>';

          // switch (data.task.status) {
          //     case -1:
          //     case 0:
          //         mn += '<li id="unregister-task"><a tabindex="-1" href="#"> <i class="fa fa-minus text-danger" aria-hidden="true"></i> Unregister</a></li>';
          //         break;
          //     case 1:
          //         mn = '<li id="submit-task"><a tabindex="-1" href="#"> <i class="fa fa-paper-plane text-success" aria-hidden="true"></i> Q.A ok</a></li>';
          //         mn += '<li id="reject-task"><a tabindex="-1" href="#"> <i class="fa fa-ban text-danger" aria-hidden="true"></i> Reject</a></li>';
          //         mn += '<li id="unregister-task"><a tabindex="-1" href="#"> <i class="fa fa-minus text-danger" aria-hidden="true"></i> Unregister</a></li>';
          //         break;

          //     default:
          //         $contextMenu.css({
          //             display: "none"
          //         });
          //         break;

          // }
          $('#funcMenu').append(mn);
        }
      })


      $('html').click(function () {
        $contextMenu.hide();
      });

    });



    $(document).on("click", "button[name='btn-job-info']", function () {
      jobId = $(this).closest("tr").attr("id");
      customerId = $(this).closest("tr").data("customer");
      $('#JobDetailModal').modal();

    })

    $(document).on("click", "button[name='edit-job']", function () {
      jobId = $(this).closest("tr").attr("id");
      $('#updateJobModal').modal();

    })

    $(document).ready(function () {
      LoadJobs();
    });

    $('#updateJobModal').on('hidden.bs.modal', function () {
      LoadJobs();
    })

    $('#btnSearch').click(function () {
      search = $('#txtSearch').val();
      LoadJobs();
    })



    $('#txtSearch').keyup(function (e) {
      if (e.keyCode == 13) {
        $("#btnSearch").click()
      }
    });



    function LoadJobs() {
      $.ajax({
        url: "/accountant/job/list",
        type: "get",
        headers: {
          authorization: "Bearer " + localStorage.getItem("accessToken"),
        },
        data: {
          search,
          page,
        },
        success: function (data) {
          $('#tblJobs').empty();
          let idx = 1;
          data.jobs.forEach(j => {
            let tr = '<tr id="' + j._id + '">';
            // tr += '<td>  <input type="checkbox" name="ckb_ticked"></td>';
            tr += '<td>' + (idx++) + '</td>';
            tr += '<td class="font-weight-bold text-primary">' + j.customer.firstname + ' ' + j.customer.lastname + '</td>';
            tr += '<td class="font-weight-bold text-warning">' + j.name + '</td>';
            tr += '<td>' + convertISODateToTimeFormat(j.received_date) + '</td>';
            tr += '<td>' + convertISODateToTimeFormat(j.delivery_date) + '</td>';

            tr += '<td>';

            /*            
           0: Processing
           1:Upload   
           2:Done
           3: finish

           -1: initial
           -2:'Rejected
           
           - 3: Canceled           
       */

            switch (j.status) {
              case -1: tr += '<i class="text-info">Initial</i>'; break;
              case 0: tr += '<i class="text-primary">Processing</i>'; break;
              case 1: tr += '<i class="text-warning">Uploaded</i>'; break;
              case 2: tr += '<i class="text-warning">Done</i>'; break;
              case 3: tr += '<i class="text-success">Finish</i>'; break;
              case -2: tr += '<i class="text-danger">Rejected</i>'; break;
              case -3: tr += '<i class="text-danger">Canceled</i>'; break;
            }

            tr += '</td>';


            tr += '<td>';
            tr += '<button class="btn btn-xs parents js-view-parents fa fa-plus" name="js-view-parents"></button>';
            tr += '</td>';
            tr += '</tr> ';
            $('#tblJobs').append(tr);

          })

        },
        error: function (jqXHR, textStatus, errorThrown) {
          alert(jqXHR.responseJSON.msg + ". " + jqXHR.responseJSON.error);
        },
      });
    }


  </script>