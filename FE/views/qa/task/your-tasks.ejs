<div class="row">
    <div class="col-md-2 col-md-offset-6 col-sm-2 col-xs-4 mt-2">
        <select name="" id="slStatus" class="form-control">
            <option value="100">All</option>
            <option value="1">Editor submited</option>
            <option value="-1">Initial</option>
            <option value="0">Editing</option>
            <option value="2">Submited</option>
            <option value="-2">Rejected</option>
        </select>
    </div>
    <div class="col-md-4 col-sm-4 col-xs-12 mt-2">
        <!-- Another variation with a button -->
        <div class="input-group">
            <input type="text" class="form-control" placeholder="Seach your job..." id="txtSearch" />
            <div class="input-group-btn">
                <button class="btn btn-info" type="submit" id="btnSearch">
                    <i class="fa fa-search" aria-hidden="true"></i>
                </button>
            </div>
            <div class="col-md-2 col-sm-2 col-xs-3 text-right">
                <button class="btn btn-primary" id="btnGetTask">
                    <i class="fa fa-plus" aria-hidden="true"></i> Get task
                </button>
            </div>
        </div>
    </div>
</div>


<div class="table-responsive mt-2">
    <table class="table table-striped text-nowrap">
        <thead class="thead-dark">
            <tr>
                <th scope="col"></th>
                <th scope="col">#</th>
                <th scope="col">Customer</th>
                <th scope="col">Job</th>
                <th scope="col">Level</th>
                <th scope="col">Deadline</th>
                <th scope="col">Remark</th>
                <th scope="col" class="text-right">E-N</th>
                <th scope="col" class="text-right">E-T</th>
                <th scope="col">Editor</th>
                <th scope="col">Status</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody id="tbdTasks">
        </tbody>
    </table>
</div>

<div id="contextMenu" class="dropdown clearfix">
    <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu"
        style="display:block;position:static;margin-bottom:5px;" id="funcMenu">
    </ul>
</div>


<%-include('task_detail')%>
    <%-include('reject-modal')%>

        <script src="/js/common.js"></script>

        <script>
            var page = 1;
            var search = '';
            var status = 100;
            var customerId = '';
            var levelId = '';
            var taskId = '';
            $(document).ready(function () {
                LoadTasks();
            })

            $('#btnGetTask').click(function () {
                $.ajax({
                    url: '/qa/task/get-task',
                    type: 'put',
                    headers: {
                        authorization: "Bearer " + localStorage.getItem("accessToken"),
                    },
                    success: function (data) {
                        alert(data.msg);
                        LoadTasks();
                    },
                    error: function (request, status, error) {
                        alert(request.responseJSON.msg);

                    }
                })
            })

            $(document).on('click', '#funcMenu  li', function () {
                let fnc = $(this).attr('id');

                switch (fnc) {
                    case 'reject-task':
                        $('#modalRejectTask').modal();
                        break;
                    case 'submit-task':
                        if (confirm('Are you sure want to submit this task?')) {
                            $.ajax({
                                url: '/qa/task/submit',
                                type: 'put',
                                headers: {
                                    authorization: "Bearer " + localStorage.getItem("accessToken"),
                                },
                                data: {
                                    taskId
                                },
                                success: function (data) {
                                    alert(data.msg);
                                    LoadTasks();
                                }, error: function (request, status, error) {
                                    alert(request.responseJSON.msg);
                                }
                            })
                        }
                        break;

                    case 'unregister-task':
                        if (confirm('Are you sure want to unregister this task?')) {
                            $.ajax({
                                url: '/qa/task/unregister',
                                type: 'put',
                                headers: {
                                    authorization: "Bearer " + localStorage.getItem("accessToken"),
                                },
                                data: {
                                    taskId
                                },
                                success: function (data) {
                                    alert(data.msg);
                                    LoadTasks();
                                }, error: function (request, status, error) {
                                    alert(request.responseJSON.msg);
                                }
                            })
                        }
                        break;
                }
            });


            $(document).on("click", "button[name='functions']", function (e) {
                var $contextMenu = $("#contextMenu");
                $contextMenu.css({
                    display: "block",
                    left: e.pageX,
                    top: e.pageY
                });

                taskId = $(this).closest('tr').attr('id');

                $.ajax({
                    url: '/qa/task/detail',
                    type: 'get',
                    headers: {
                        authorization: "Bearer " + localStorage.getItem("accessToken"),
                    },
                    data: {
                        taskId
                    },
                    success: function (data) {
                        customerId = data.customer._id;
                        levelId = data.task.basic.level._id;

                        $('#funcMenu').empty();
                        let mn = '';
                        switch (data.task.status) {
                            case -1:
                            case 0:
                                if (!data.task.qa_assigned) {
                                    mn += '<li id="unregister-task"><a tabindex="-1" href="#"> <i class="fa fa-minus text-danger" aria-hidden="true"></i> Unregister</a></li>';
                                }
                                break;
                            case 1:
                                mn = '<li id="submit-task"><a tabindex="-1" href="#"> <i class="fa fa-paper-plane text-success" aria-hidden="true"></i> Q.A ok</a></li>';
                                mn += '<li id="reject-task"><a tabindex="-1" href="#"> <i class="fa fa-ban text-danger" aria-hidden="true"></i> Reject</a></li>';
                                if (!data.task.qa_assigned) {
                                    mn += '<li id="unregister-task"><a tabindex="-1" href="#"> <i class="fa fa-minus text-danger" aria-hidden="true"></i> Unregister</a></li>';
                                }
                                break;

                            default:
                                $contextMenu.css({
                                    display: "none"
                                });
                                break;

                        }
                        $('#funcMenu').append(mn);
                    }
                })


                $('html').click(function () {
                    $contextMenu.hide();
                });

            });

            $('#slStatus').on('change', function () {
                status = this.value;
                LoadTasks();
            })



            $('#modalRejectTask').on('hidden.bs.modal', function () {
                LoadTasks();
            })


            $(document).on("click", "button[name='btnTaskInfo']", function () {
                taskId = $(this).closest("tr").attr("id");
                $('#modalTaskDetail').modal();
            })




            function LoadTasks() {
                $.ajax({
                    url: '/qa/task/personal',
                    type: 'get',
                    headers: {
                        authorization: "Bearer " + localStorage.getItem("accessToken"),
                    },
                    data: {
                        search,
                        page,
                        status
                    },
                    success: function (data) {
                        $('#tbdTasks').empty();
                        let idx = 1;

                        data.tasks.forEach(t => {
                            let tr = '<tr id="' + t._id + '" data-job="' + t.basic.level._id + '">';
                            tr += '<td>';
                            tr += '<button class="btn btn-xs btn-warning ml-2" name="functions"><i class="fa fa-cog" aria-hidden="true"></i></button>';
                            tr += '</td>';
                            tr += '<td>' + (idx++) + '</td>';

                            tr += '<td class="font-weight-bold text-primary">' +getFirstLetters(t.basic.job.customer.firstname + ' ' + t.basic.job.customer.lastname)+getLastLetters(t.basic.job.customer._id)+ '</td>';
                            tr += '<td class="font-weight-bold text-danger">' + t.basic.job.name + '</td>';
                            tr += '<td class="font-weight-bold">' + t.basic.level.name + '</td>';
                            tr += '<td class="text-danger">';
                            if (t.basic.deadline.end) {
                                tr += convertISODateToTimeFormat(t.basic.deadline.end);
                            }
                            tr += '</td>';

                            tr += '<td>';
                            if (typeof t.remarks[0] !== 'undefined') {
                                tr += t.remarks[0].content;
                            }
                            tr += '</td>';

                            tr += '<td class="text-right">';
                            if (t.editor.length > 0 && t.editor[t.editor.length - 1].submited.length > 0) {
                                tr += t.editor[t.editor.length - 1].submited[t.editor[t.editor.length - 1].submited.length - 1].amount;
                            }
                            tr += '</td>';

                            tr += '<td class="text-right">';
                            if (t.editor.length > 0 && t.editor[t.editor.length - 1].submited.length > 0) {
                                tr += t.editor[t.editor.length - 1].submited.length;
                            }
                            tr += '</td>';


                            tr += '<td>';
                              
                            if (t.status !== -1) {
                                tr += t.editor[t.editor.length - 1].staff.fullname;
                            }
                            tr += '</td>';


                            tr += '<td><i>';

                            switch (t.status) {
                                case -1: tr += '<span class="text-info">Initial</span>';
                                    break;
                                case 0: tr += '<span class="text-info">Processing</span>';
                                    break;
                                case 1:
                                    {
                                        if (t.editor.length > 0 && t.editor[t.editor.length - 1].submited.length > 1) {
                                            tr += '<span class="text-primary">Fixed</span>';
                                        } else {
                                            tr += '<span class="text-primary">Edited</span>';
                                        }
                                        break;
                                    }
                                case 2:
                                    tr += '<span class="text-success">Q.A ok!</span>';
                                    break;
                                case 3:
                                    tr += '<span class="text-success">DC ok!</span>'
                                    break;
                                case -2:
                                    tr += '<span class="text-danger">Q.A rejected</span>';
                                    break;
                                case -3:
                                    tr += '<span class="text-danger">DC rejected</span>';
                                    break;
                                case -4:
                                    tr += '<span class="text-danger">Sale rejected</span>';
                                    break;
                                case -5:
                                    tr += '<span class="text-danger">Canceled</span>';
                                    break;
                                case 4: tr += '<span class="text-success font-weight-bold">Upload</span>'; break;
                                case 5: tr += '<span class="text-success font-weight-bold">Done</span>'; break;
                                case 6: tr += '<span class="text-success font-weight-bold">Finish</span>'; break;

                            }
                            tr += '</i></td>';




                            tr += '<td class="text-right">';
                            tr += '<button class="btn btn-xs btn-info" name="btnTaskInfo">';
                            tr += '<i class="fa fa-info-circle" aria-hidden="true"></i>';
                            tr += '</button>';
                            tr += '</td>';


                            tr += '</tr>';
                            $('#tbdTasks').append(tr);
                        })
                    }

                })
            }
        </script>

        <style>
            #contextMenu {
                position: absolute;
                display: none;
            }

            tr:hover {
                background: #c9e8f7;
                position: relative;
            }
        </style>